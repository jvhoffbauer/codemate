{"original_code": "    def __call__(self, img: ImageData) -> ImageData:\n        \"\"\"Encode DEM into RGB (Mapbox Terrain RGB).\n\n        Code from https://github.com/mapbox/rio-rgbify/blob/master/rio_rgbify/encoders.py (MIT)\n\n        \"\"\"\n\n        def _range_check(datarange):\n            \"\"\"\n            Utility to check if data range is outside of precision for 3 digit base 256\n            \"\"\"\n            maxrange = 256**3\n\n            return datarange > maxrange\n\n        round_digits = 0\n\n        data = img.data[0].astype(numpy.float64)\n        data -= self.baseval\n        data /= self.interval\n\n        data = numpy.around(data / 2**round_digits) * 2**round_digits\n\n        rows, cols = data.shape\n        datarange = data.max() - data.min()\n        if _range_check(datarange):\n            raise ValueError(\"Data of {} larger than 256 ** 3\".format(datarange))\n\n        rgb = numpy.zeros((3, rows, cols), dtype=numpy.uint8)\n        rgb[2] = ((data / 256) - (data // 256)) * 256\n        rgb[1] = (((data // 256) / 256) - ((data // 256) // 256)) * 256\n        rgb[0] = (\n            (((data // 256) // 256) / 256) - (((data // 256) // 256) // 256)\n        ) * 256\n\n        return ImageData(\n            rgb,\n            img.mask,\n            assets=img.assets,\n            crs=img.crs,\n            bounds=img.bounds,\n        )"}
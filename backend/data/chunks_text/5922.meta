{"original_code": "    def create_model_by_fields(\n        name: str,\n        fields: Sequence[ModelField],\n        *,\n        set_none: bool = False,\n        extra: str = \"ignore\",\n        **kwargs,\n    ) -> Type[BaseModel]:\n        __config__ = marge_model_config(\n            AllowExtraModelMixin, {\"extra\": extra, **kwargs}\n        )\n        __validators__ = None\n        if set_none:\n            __validators__ = {\n                \"root_validator_skip_blank\": root_validator(pre=True, allow_reuse=True)(\n                    root_validator_skip_blank\n                )\n            }\n            for f in fields:\n                f.required = False\n                f.allow_none = True\n        model = create_model(name, __config__=__config__, __validators__=__validators__)  # type: ignore\n        model.__fields__ = {f.name: f for f in fields}\n        return model"}
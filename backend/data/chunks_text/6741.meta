{"original_code": "def test_basic(ep, app, app_client):\n    @ep.method()\n    def probe(\n        data: List[str] = Body(..., examples=[\"111\", \"222\"]),\n        amount: int = Body(..., gt=5, examples=[10]),\n    ) -> List[int]:\n        del data, amount\n        return [1, 2, 3]\n\n    app.bind_entrypoint(ep)\n\n    resp = app_client.get(\"/openrpc.json\")\n\n    assert resp.json()[\"methods\"] == [\n        {\n            \"name\": \"probe\",\n            \"params\": [\n                {\n                    \"name\": \"data\",\n                    \"schema\": {\n                        \"title\": \"Data\",\n                        \"examples\": [\"111\", \"222\"],\n                        \"type\": \"array\",\n                        \"items\": {\"type\": \"string\"},\n                    },\n                    \"required\": True,\n                },\n                {\n                    \"name\": \"amount\",\n                    \"schema\": {\n                        \"title\": \"Amount\",\n                        \"exclusiveMinimum\": 5,\n                        \"examples\": [10],\n                        \"type\": \"integer\",\n                    },\n                    \"required\": True,\n                },\n            ],\n            \"result\": {\n                \"name\": \"probe_Result\",\n                \"schema\": {\n                    \"title\": \"Result\",\n                    \"type\": \"array\",\n                    \"items\": {\"type\": \"integer\"},\n                },\n            },\n            \"tags\": [],\n            \"errors\": [],\n        }\n    ]"}
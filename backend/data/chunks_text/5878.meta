{"original_code": "    def get_permission_fields(self, action: str) -> Dict[str, str]:\n        \"\"\"\u83b7\u53d6\u6743\u9650\u5b57\u6bb5\"\"\"\n        info = {\n            \"list\": (self.schema_list, _(\"List display\") + \"-\", FieldPermEnum.LIST),\n            \"filter\": (\n                self.schema_filter,\n                _(\"List filter\") + \"-\",\n                FieldPermEnum.FILTER,\n            ),\n            \"create\": (self.schema_create, _(\"Create\") + \"-\", FieldPermEnum.CREATE),\n            \"read\": (self.schema_read, _(\"Read\") + \"-\", FieldPermEnum.READ),\n            \"update\": (self.schema_update, _(\"Update\") + \"-\", FieldPermEnum.UPDATE),\n        }\n        if action not in info:\n            return {}\n        schema, prefix, perm = info[action]\n        perm_fields_exclude = self.perm_fields_exclude or {}\n        perm_fields = self.perm_fields or {}\n        exclude = set()\n        for k, fields in perm_fields_exclude.items():\n            if (k & perm) == perm:\n                exclude.update(set(fields))\n        include = set()\n        for k, fields in perm_fields.items():\n            if (k & perm) == perm:\n                include.update(set(fields))\n        return get_schema_fields_name_label(\n            schema,\n            prefix=prefix,\n            exclude_required=True,\n            exclude=exclude,\n            include=include,\n        )"}
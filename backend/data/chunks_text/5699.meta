{"original_code": "    @classmethod\n    def bind_model_admin(\n        cls, pk_admin: \"ModelAdmin\", insfield: InstrumentedAttribute\n    ) -> Optional[\"LinkModelForm\"]:\n        if not isinstance(insfield.property, RelationshipProperty):\n            return None\n        table = insfield.property.secondary\n        if table is None:\n            return None\n        admin = None\n        link_key = None\n        item_key = None\n        for key in table.foreign_keys:\n            if (\n                key.column.table != pk_admin.model.__table__\n            ):  # Get the associated third-party table\n                admin = pk_admin.app.site.get_model_admin(key.column.table.name)\n                link_key = key\n            else:\n                item_key = key\n        if admin and link_key and item_key:\n            admin.link_models[pk_admin.model.__table__.name] = (\n                table,\n                link_key.parent,\n                item_key.parent,\n            )\n            return LinkModelForm(\n                pk_admin=pk_admin,\n                display_admin=admin,\n                link_model=table,\n                link_col=link_key.parent,\n                item_col=item_key.parent,\n            )\n        return None"}
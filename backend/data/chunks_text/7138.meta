{"original_code": "@router.post(\"/login\", summary=\"\u7528\u6237\u767b\u5f55\u8ba4\u8bc1\", name=\"\u767b\u5f55\")\ndef login_access_token(\n    *,\n    req: sys_user_schema.UserPhoneAuth,\n) -> Any:\n    \"\"\"\n    \u7b80\u5355\u5b9e\u73b0\u767b\u5f55\n    :param req:\n    :return:\n    \"\"\"\n\n    # \u9a8c\u8bc1\u7528\u6237 \u7b80\u77ed\u7684\u4e1a\u52a1\u53ef\u4ee5\u5199\u5728\u8fd9\u91cc\n    # user = User.single_by_phone(phone=req.username)\n    # if not user:\n    #     return resp.fail(resp.DataNotFound.set_msg(\"\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\"))\n    #\n    # if not security.verify_password(req.password, user.password):\n    #     return resp.fail(resp.DataNotFound.set_msg(\"\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\"))\n    #\n    # access_token_expires = timedelta(minutes=settings.ACCESS_TOKEN_EXPIRE_MINUTES)\n    #\n    # # \u767b\u5f55token \u5b58\u50a8\u4e86user.id\n    # return resp.ok(data={\n    #     \"token\": security.create_access_token(user.id, expires_delta=access_token_expires),\n    # })\n\n    # \u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u5efa\u8bae \u62bd\u79bb\u5230 logic\u6587\u4ef6\u5939\u4e0b\n    token = UserLogic().user_login_logic(req.username, req.password)\n    return resp.ok(data={\"token\": token})"}
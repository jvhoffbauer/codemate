{"original_code": "def test_path_param_min_maxlength_f():\n    response = client.get(\"/path/param-min_maxlength/f\")\n    assert response.status_code == 422\n    assert response.json() == IsDict(\n        {\n            \"detail\": [\n                {\n                    \"type\": \"string_too_short\",\n                    \"loc\": [\"path\", \"item_id\"],\n                    \"msg\": \"String should have at least 2 characters\",\n                    \"input\": \"f\",\n                    \"ctx\": {\"min_length\": 2},\n                    \"url\": match_pydantic_error_url(\"string_too_short\"),\n                }\n            ]\n        }\n    ) | IsDict(\n        {\n            \"detail\": [\n                {\n                    \"loc\": [\"path\", \"item_id\"],\n                    \"msg\": \"ensure this value has at least 2 characters\",\n                    \"type\": \"value_error.any_str.min_length\",\n                    \"ctx\": {\"limit_value\": 2},\n                }\n            ]\n        }\n    )"}
{"original_code": "    async def handle_req(\n        self,\n        http_request: Request,\n        background_tasks: BackgroundTasks,\n        sub_response: Response,\n        ctx: JsonRpcContext,\n        dependency_cache: dict = None,\n        shared_dependencies_error: BaseError = None,\n    ):\n        http_request_shadow = RequestShadow(http_request)\n        http_request_shadow.scope[\"path\"] = self.path + \"/\" + ctx.request.method\n\n        for route in self.entrypoint.routes:  # type: MethodRoute\n            match, child_scope = route.matches(http_request_shadow.scope)\n            if match == Match.FULL:\n                # http_request is a transport layer and it is common for all JSON-RPC requests in a batch\n                ctx.method_route = route\n                return await route.handle_req(\n                    http_request_shadow,\n                    background_tasks,\n                    sub_response,\n                    ctx,\n                    dependency_cache=dependency_cache,\n                    shared_dependencies_error=shared_dependencies_error,\n                )\n        else:\n            raise MethodNotFound()"}
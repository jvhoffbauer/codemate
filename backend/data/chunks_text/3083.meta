{"original_code": "@needs_pydanticv1\ndef test_read_with_orm_mode_pv1() -> None:\n    class PersonBase(BaseModel):\n        name: str\n        lastname: str\n\n    class Person(PersonBase):\n        @property\n        def full_name(self) -> str:\n            return f\"{self.name} {self.lastname}\"\n\n        class Config:\n            orm_mode = True\n            read_with_orm_mode = True\n\n    class PersonCreate(PersonBase):\n        pass\n\n    class PersonRead(PersonBase):\n        full_name: str\n\n        class Config:\n            orm_mode = True\n\n    app = FastAPI()\n\n    @app.post(\"/people/\", response_model=PersonRead)\n    def create_person(person: PersonCreate) -> Any:\n        db_person = Person.from_orm(person)\n        return db_person\n\n    client = TestClient(app)\n\n    person_data = {\"name\": \"Dive\", \"lastname\": \"Wilson\"}\n    response = client.post(\"/people/\", json=person_data)\n    data = response.json()\n    assert response.status_code == 200, response.text\n    assert data[\"name\"] == person_data[\"name\"]\n    assert data[\"lastname\"] == person_data[\"lastname\"]\n    assert data[\"full_name\"] == person_data[\"name\"] + \" \" + person_data[\"lastname\"]"}
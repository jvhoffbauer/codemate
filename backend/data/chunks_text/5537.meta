{"original_code": "    def get_table_model_schema(\n        table_model: Type[TableModelT],\n    ) -> Optional[Type[BaseModel]]:\n        \"\"\"Get pydantic schema from sqlalchemy InspecTable.\"\"\"\n\n        if issubclass(table_model, BaseModel):\n            return table_model\n        elif hasattr(table_model, \"__pydantic_model__\") and issubclass(\n            table_model.__pydantic_model__, BaseModel\n        ):\n            return table_model.__pydantic_model__\n        insfields = TableModelParser.get_table_model_insfields(table_model)\n        if not insfields:\n            return None\n        modelfields = [\n            insfield_to_modelfield(insfield) for insfield in insfields.values()\n        ]\n        modelfields = list(filter(None, modelfields))\n        table_model.__pydantic_model__ = create_model_by_fields(\n            table_model.__name__, modelfields, orm_mode=True\n        )\n        return table_model.__pydantic_model__"}
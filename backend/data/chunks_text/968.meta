{"original_code": "    def get_model_definitions(\n        *,\n        flat_models: Set[Union[Type[BaseModel], Type[Enum]]],\n        model_name_map: Dict[Union[Type[BaseModel], Type[Enum]], str],\n    ) -> Dict[str, Any]:\n        definitions: Dict[str, Dict[str, Any]] = {}\n        for model in flat_models:\n            m_schema, m_definitions, m_nested_models = model_process_schema(\n                model, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n            )\n            definitions.update(m_definitions)\n            model_name = model_name_map[model]\n            if \"description\" in m_schema:\n                m_schema[\"description\"] = m_schema[\"description\"].split(\"\\f\")[0]\n            definitions[model_name] = m_schema\n        return definitions"}
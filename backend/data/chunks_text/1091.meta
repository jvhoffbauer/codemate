{"original_code": "@app.post(\"/token\", response_model=Token)\nasync def login_for_access_token(\n    form_data: Annotated[OAuth2PasswordRequestForm, Depends()]\n):\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\n    if not user:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    access_token = create_access_token(\n        data={\"sub\": user.username, \"scopes\": form_data.scopes},\n        expires_delta=access_token_expires,\n    )\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}"}
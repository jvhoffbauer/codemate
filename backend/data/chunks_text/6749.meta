{"original_code": "def test_errors(ep, app, app_client):\n    class MyError(jsonrpc.BaseError):\n        CODE = 5000\n        MESSAGE = \"My error\"\n\n        class DataModel(BaseModel):\n            details: str\n\n    @ep.method(errors=[MyError])\n    def my_method__with_errors() -> None:\n        return None\n\n    app.bind_entrypoint(ep)\n\n    resp = app_client.get(\"/openrpc.json\")\n    schema = resp.json()\n\n    assert len(schema[\"methods\"]) == 1\n    assert schema[\"methods\"][0][\"errors\"] == [\n        {\"$ref\": \"#/components/errors/5000\"},\n    ]\n    assert schema[\"components\"][\"errors\"][\"5000\"] == {\n        \"code\": 5000,\n        \"message\": \"My error\",\n        \"data\": {\n            \"title\": \"MyError.Data\",\n            \"type\": \"object\",\n            \"properties\": {\"details\": {\"title\": \"Details\", \"type\": \"string\"}},\n            \"required\": [\"details\"],\n        },\n    }"}
{"original_code": "def test_cachecontrol_middleware_exclude():\n    \"\"\"Create App.\"\"\"\n    app = FastAPI()\n\n    @app.get(\"/route1\")\n    async def route1():\n        \"\"\"route1.\"\"\"\n        return \"yo\"\n\n    @app.get(\"/route2\")\n    async def route2():\n        \"\"\"route2.\"\"\"\n        return \"yeah\"\n\n    @app.get(\"/route3\")\n    async def route3():\n        \"\"\"route3.\"\"\"\n        return \"yeah\"\n\n    @app.get(\"/tiles/{z}/{x}/{y}\")\n    async def tiles(\n        z: int = Path(..., ge=0, le=30, description=\"Mercator tiles's zoom level\"),\n        x: int = Path(..., description=\"Mercator tiles's column\"),\n        y: int = Path(..., description=\"Mercator tiles's row\"),\n    ):\n        \"\"\"tiles.\"\"\"\n        return \"yeah\"\n\n    @app.get(\"/emptytiles/{z}/{x}/{y}\")\n    async def emptytiles(\n        z: int = Path(..., ge=0, le=30, description=\"Mercator tiles's zoom level\"),\n        x: int = Path(..., description=\"Mercator tiles's column\"),\n        y: int = Path(..., description=\"Mercator tiles's row\"),\n    ):\n        \"\"\"tiles.\"\"\"\n        return Response(status_code=404)\n\n    app.add_middleware(\n        CacheControlMiddleware,\n        cachecontrol=\"public\",\n        cachecontrol_max_http_code=400,\n        exclude_path={r\"/route1\", r\"/route2\", r\"/tiles/[0-1]/.+\"},\n    )\n\n    client = TestClient(app)\n\n    response = client.get(\"/route1\")\n    assert not response.headers.get(\"Cache-Control\")\n\n    response = client.get(\"/route2\")\n    assert not response.headers.get(\"Cache-Control\")\n\n    response = client.get(\"/route3\")\n    assert response.headers[\"Cache-Control\"] == \"public\"\n\n    response = client.get(\"/tiles/0/1/1\")\n    assert not response.headers.get(\"Cache-Control\")\n\n    response = client.get(\"/tiles/3/1/1\")\n    assert response.headers[\"Cache-Control\"] == \"public\"\n\n    response = client.get(\"/emptytiles/3/1/1\")\n    assert not response.headers.get(\"Cache-Control\")"}
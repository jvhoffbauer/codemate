{"original_code": "def test_assets():\n    \"\"\"test assets deps.\"\"\"\n\n    app = FastAPI()\n\n    @app.get(\"/first\")\n    def _assets(params=Depends(dependencies.AssetsParams)):\n        \"\"\"return assets.\"\"\"\n        return params.assets\n\n    @app.get(\"/second\")\n    def _assets_expr(params=Depends(dependencies.AssetsBidxExprParams)):\n        \"\"\"return params.\"\"\"\n        return params\n\n    @app.get(\"/third\")\n    def _assets_bidx(params=Depends(dependencies.AssetsBidxParams)):\n        \"\"\"return params.\"\"\"\n        return params\n\n    client = TestClient(app)\n    response = client.get(\"/first?assets=data&assets=image\")\n    assert response.json() == [\"data\", \"image\"]\n\n    response = client.get(\"/first\")\n    assert not response.json()\n\n    response = client.get(\"/second?assets=data&assets=image\")\n    assert response.json()[\"assets\"] == [\"data\", \"image\"]\n    assert not response.json()[\"expression\"]\n\n    response = client.get(\"/second?expression=data*image\")\n    assert response.json()[\"expression\"] == \"data*image\"\n    assert not response.json()[\"assets\"]\n\n    with pytest.raises(errors.MissingAssets):\n        response = client.get(\"/second\")\n\n    response = client.get(\n        \"/second?assets=data&assets=image&asset_bidx=data|1,2,3&asset_bidx=image|1\"\n    )\n    assert response.json()[\"assets\"] == [\"data\", \"image\"]\n    assert response.json()[\"asset_indexes\"] == {\"data\": [1, 2, 3], \"image\": [1]}\n\n    response = client.get(\"/third?assets=data&assets=image\")\n    assert response.json()[\"assets\"] == [\"data\", \"image\"]\n\n    response = client.get(\"/third\")\n    assert not response.json()[\"assets\"]\n\n    response = client.get(\n        \"/third?assets=data&assets=image&asset_bidx=data|1,2,3&asset_bidx=image|1\"\n    )\n    assert response.json()[\"assets\"] == [\"data\", \"image\"]\n    assert response.json()[\"asset_indexes\"] == {\"data\": [1, 2, 3], \"image\": [1]}\n\n    response = client.get(\n        \"/third?assets=data&assets=image&asset_expression=data|b1\\b2&asset_expression=image|b1*b2\"\n    )\n    assert response.json()[\"assets\"] == [\"data\", \"image\"]\n    assert response.json()[\"asset_expression\"] == {\"data\": \"b1\\b2\", \"image\": \"b1*b2\"}"}
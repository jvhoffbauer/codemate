{"original_code": "async def test_schema_create(app: FastAPI, async_client: AsyncClient, models):\n    class UserCreate(BaseModel):\n        username: str\n\n    class UserCrud(SqlalchemyCrud):\n        router_prefix = \"/user\"\n        schema_create = UserCreate\n\n    ins = UserCrud(models.User, db.engine).register_crud()\n\n    app.include_router(ins.router)\n\n    assert \"username\" in model_fields(ins.schema_create)\n    assert \"password\" not in model_fields(ins.schema_create)\n\n    # test schemas\n    openapi = app.openapi()\n    schemas = openapi[\"components\"][\"schemas\"]\n    assert \"username\" in schemas[\"UserCreate\"][\"properties\"]\n    assert \"password\" not in schemas[\"UserCreate\"][\"properties\"]\n    # test api\n    body = {\"username\": \"User\", \"password\": \"password\"}\n    res = await async_client.post(\"/user/item\", json=body)\n    data = res.json().get(\"data\")\n    assert data[\"id\"] > 0\n    assert data[\"username\"] == \"User\"\n    assert data[\"password\"] == \"\""}
{"original_code": "    def __setattr__(self, name: str, value: Any) -> None:\n        if name in {\"_sa_instance_state\"}:\n            self.__dict__[name] = value\n            return\n        else:\n            # Set in SQLAlchemy, before Pydantic to trigger events and updates\n            if is_table_model_class(self.__class__) and is_instrumented(self, name):  # type: ignore[no-untyped-call]\n                set_attribute(self, name, value)\n            # Set in Pydantic model to trigger possible validation changes, only for\n            # non relationship values\n            if name not in self.__sqlmodel_relationships__:\n                super().__setattr__(name, value)"}
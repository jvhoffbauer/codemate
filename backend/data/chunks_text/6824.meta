{"original_code": "def login_access_token(\n    db: Session = Depends(deps.get_db), form_data: OAuth2PasswordRequestForm = Depends()\n) -> Any:\n    \"\"\"\n    OAuth2 compatible token login, get an access token for future requests\n    \"\"\"\n    user = crud.user.authenticate(\n        db, email=form_data.username, password=form_data.password\n    )\n    if not user:\n        raise HTTPException(status_code=400, detail=\"Incorrect email or password\")\n    elif not crud.user.is_active(user):\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\n    access_token_expires = timedelta(minutes=settings.ACCESS_TOKEN_EXPIRE_MINUTES)\n    return {\n        \"access_token\": security.create_access_token(\n            user.id, expires_delta=access_token_expires\n        ),\n        \"token_type\": \"bearer\",\n    }"}
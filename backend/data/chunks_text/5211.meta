{"original_code": "        def geojson_statistics(\n            geojson: Union[FeatureCollection, Feature] = Body(\n                ..., description=\"GeoJSON Feature or FeatureCollection.\"\n            ),\n            src_path=Depends(self.path_dependency),\n            bands_params=Depends(BandsExprParamsOptional),\n            dataset_params=Depends(self.dataset_dependency),\n            image_params=Depends(self.img_dependency),\n            stats_params=Depends(self.stats_dependency),\n            histogram_params=Depends(self.histogram_dependency),\n            reader_params=Depends(self.reader_dependency),\n            env=Depends(self.environment_dependency),\n        ):\n            \"\"\"Get Statistics from a geojson feature or featureCollection.\"\"\"\n            fc = geojson\n            if isinstance(fc, Feature):\n                fc = FeatureCollection(features=[geojson])\n\n            with rasterio.Env(**env):\n                with self.reader(src_path, **reader_params) as src_dst:\n                    # Default to all available bands\n                    if not bands_params.bands and not bands_params.expression:\n                        bands_params.bands = src_dst.bands\n\n                    for feature in fc:\n                        data = src_dst.feature(\n                            feature.dict(exclude_none=True),\n                            **bands_params,\n                            **image_params,\n                            **dataset_params,\n                        )\n                        stats = get_array_statistics(\n                            data.as_masked(),\n                            **stats_params,\n                            **histogram_params,\n                        )\n\n                        feature.properties = feature.properties or {}\n                        feature.properties.update(\n                            {\n                                \"statistics\": {\n                                    f\"{data.band_names[ix]}\": BandStatistics(\n                                        **stats[ix]\n                                    )\n                                    for ix in range(len(stats))\n                                }\n                            }\n                        )\n\n            return fc.features[0] if isinstance(geojson, Feature) else fc"}
{"original_code": "@pytest.fixture\ndef monkeypatch_test_transport(monkeypatch):\n    def check_event(event):\n        def check_string_keys(map):\n            for key, value in map.items:\n                assert isinstance(key, str)\n                if isinstance(value, dict):\n                    check_string_keys(value)\n\n        with capture_internal_exceptions():\n            check_string_keys(event)\n\n    def check_envelope(envelope):\n        with capture_internal_exceptions():\n            # Assert error events are sent without envelope to server, for compat.\n            # This does not apply if any item in the envelope is an attachment.\n            if not any(x.type == \"attachment\" for x in envelope.items):\n                assert not any(item.data_category == \"error\" for item in envelope.items)\n                assert not any(item.get_event() is not None for item in envelope.items)\n\n    def inner(client):\n        monkeypatch.setattr(\n            client, \"transport\", _TestTransport(check_event, check_envelope)\n        )\n\n    return inner"}
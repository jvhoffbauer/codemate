{"original_code": "@patch(\"rio_tiler.io.rasterio.rasterio\")\n@patch(\"rio_tiler.io.stac.httpx\")\ndef test_tilejson(httpx, rio, app):\n    \"\"\"test /tilejson endpoint.\"\"\"\n    httpx.get = mock_RequestGet\n    rio.open = mock_rasterio_open\n\n    response = app.get(\"/stac/tilejson.json?url=https://myurl.com/item.json\")\n    assert response.status_code == 400\n\n    response = app.get(\n        \"/stac/tilejson.json?url=https://myurl.com/item.json&assets=B01&minzoom=5&maxzoom=10\"\n    )\n    assert response.status_code == 200\n    body = response.json()\n    assert body[\"tilejson\"] == \"2.2.0\"\n    assert body[\"version\"] == \"1.0.0\"\n    assert body[\"scheme\"] == \"xyz\"\n    assert len(body[\"tiles\"]) == 1\n    assert body[\"tiles\"][0].startswith(\n        \"http://testserver/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?url=\"\n    )\n    assert body[\"minzoom\"] == 5\n    assert body[\"maxzoom\"] == 10\n    assert body[\"bounds\"]\n    assert body[\"center\"]\n\n    response = app.get(\n        \"/stac/tilejson.json?url=https://myurl.com/item.json&assets=B01&tile_format=png&tile_scale=2\"\n    )\n    assert response.status_code == 200\n    body = response.json()\n    assert body[\"tiles\"][0].startswith(\n        \"http://testserver/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@2x.png?url=\"\n    )"}
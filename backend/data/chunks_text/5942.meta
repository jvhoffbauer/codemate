{"original_code": "    def set_language(self, language: str = None) -> str:\n        \"\"\"\n        Set the i18n localization language. If it is empty, try to read the environment variable `LANGUAGE`/`LANG`,\n        the system default language, in turn.\n        :param language: the language to try to set\n        :return: the language after the successful setting\n        \"\"\"\n        language = (\n            language\n            or os.getenv(\"LANGUAGE\")\n            or os.getenv(\"LANG\")\n            or locale.getlocale()[0]\n            or \"en_US\"\n        )\n        self._language = (\n            \"zh_CN\" if language.lower().startswith((\"zh\", \"chinese\")) else language\n        )\n        I18N.gettext.cache_clear()  # clear cache after language has changed\n        gc.collect()\n        return self._language"}
{"original_code": "    def on_raw_response(\n        self,\n        raw_response: Union[dict, Exception],\n    ):\n        exception = None\n        is_unhandled_exception = False\n\n        if isinstance(raw_response, Exception):\n            exception = raw_response\n            if isinstance(exception, BaseError):\n                raw_response = exception.get_resp()\n            elif isinstance(exception, HTTPException):\n                raw_response = None\n            else:\n                raw_response = InternalError().get_resp()\n                is_unhandled_exception = True\n\n        if raw_response is not None:\n            raw_response.pop(\"id\", None)\n            if isinstance(self.raw_request, dict) and \"id\" in self.raw_request:\n                raw_response[\"id\"] = self.raw_request.get(\"id\")\n            elif \"error\" in raw_response:\n                raw_response[\"id\"] = None\n\n        self._raw_response = raw_response\n        self.exception = exception\n        self.is_unhandled_exception = is_unhandled_exception"}
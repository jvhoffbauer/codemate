{"original_code": "    def get_schema_from_model_field(\n        *,\n        field: ModelField,\n        schema_generator: GenerateJsonSchema,\n        model_name_map: ModelNameMap,\n        field_mapping: Dict[\n            Tuple[ModelField, Literal[\"validation\", \"serialization\"]], JsonSchemaValue\n        ],\n        separate_input_output_schemas: bool = True,\n    ) -> Dict[str, Any]:\n        override_mode: Union[Literal[\"validation\"], None] = (\n            None if separate_input_output_schemas else \"validation\"\n        )\n        # This expects that GenerateJsonSchema was already used to generate the definitions\n        json_schema = field_mapping[(field, override_mode or field.mode)]\n        if \"$ref\" not in json_schema:\n            # TODO remove when deprecating Pydantic v1\n            # Ref: https://github.com/pydantic/pydantic/blob/d61792cc42c80b13b23e3ffa74bc37ec7c77f7d1/pydantic/schema.py#L207\n            json_schema[\n                \"title\"\n            ] = field.field_info.title or field.alias.title().replace(\"_\", \" \")\n        return json_schema"}
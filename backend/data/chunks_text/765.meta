{"original_code": "def upgrade() -> None:\n    op.create_table(\n        \"auth_user\",\n        sa.Column(\"id\", sa.Integer(), sa.Identity(always=False), nullable=False),\n        sa.Column(\"email\", sa.String(), nullable=False),\n        sa.Column(\"password\", sa.LargeBinary(), nullable=False),\n        sa.Column(\"is_admin\", sa.Boolean(), server_default=\"false\", nullable=False),\n        sa.Column(\n            \"created_at\", sa.DateTime(), server_default=sa.text(\"now()\"), nullable=False\n        ),\n        sa.Column(\"updated_at\", sa.DateTime(), nullable=True),\n        sa.PrimaryKeyConstraint(\"id\", name=op.f(\"auth_user_pkey\")),\n    )\n    op.create_table(\n        \"auth_refresh_token\",\n        sa.Column(\"uuid\", postgresql.UUID(), nullable=False),\n        sa.Column(\"user_id\", sa.Integer(), nullable=False),\n        sa.Column(\"refresh_token\", sa.String(), nullable=False),\n        sa.Column(\"expires_at\", sa.DateTime(), nullable=False),\n        sa.Column(\n            \"created_at\", sa.DateTime(), server_default=sa.text(\"now()\"), nullable=False\n        ),\n        sa.Column(\"updated_at\", sa.DateTime(), nullable=True),\n        sa.ForeignKeyConstraint(\n            [\"user_id\"],\n            [\"auth_user.id\"],\n            name=op.f(\"auth_refresh_token_user_id_fkey\"),\n            ondelete=\"CASCADE\",\n        ),\n        sa.PrimaryKeyConstraint(\"uuid\", name=op.f(\"auth_refresh_token_pkey\")),\n    )"}
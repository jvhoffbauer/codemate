{"original_code": "def get_discussions_experts(settings: Settings):\n    discussion_nodes: List[DiscussionsNode] = []\n    discussion_edges = get_graphql_question_discussion_edges(settings=settings)\n\n    while discussion_edges:\n        for discussion_edge in discussion_edges:\n            discussion_nodes.append(discussion_edge.node)\n        last_edge = discussion_edges[-1]\n        discussion_edges = get_graphql_question_discussion_edges(\n            settings=settings, after=last_edge.cursor\n        )\n\n    commentors = Counter()\n    last_month_commentors = Counter()\n    authors: Dict[str, Author] = {}\n\n    now = datetime.now(tz=timezone.utc)\n    one_month_ago = now - timedelta(days=30)\n\n    for discussion in discussion_nodes:\n        discussion_author_name = None\n        if discussion.author:\n            authors[discussion.author.login] = discussion.author\n            discussion_author_name = discussion.author.login\n        discussion_commentors = set()\n        for comment in discussion.comments.nodes:\n            if comment.author:\n                authors[comment.author.login] = comment.author\n                if comment.author.login != discussion_author_name:\n                    discussion_commentors.add(comment.author.login)\n            for reply in comment.replies.nodes:\n                if reply.author:\n                    authors[reply.author.login] = reply.author\n                    if reply.author.login != discussion_author_name:\n                        discussion_commentors.add(reply.author.login)\n        for author_name in discussion_commentors:\n            commentors[author_name] += 1\n            if discussion.createdAt > one_month_ago:\n                last_month_commentors[author_name] += 1\n    return commentors, last_month_commentors, authors"}
{"original_code": "async def test_AdminGroup(site: AdminSite):\n    group = site.get_admin_or_create(AdminGroup)\n    docs_admin = DocsAdmin(site)\n    link_admin = TmpLinkAdmin(site)\n\n    # test append_child\n    group.append_child(link_admin)\n    group.append_child(docs_admin)\n    assert docs_admin in group\n\n    # test get_page_schema_child\n    admin, parent = group.get_page_schema_child(docs_admin.unique_id)\n    assert admin is docs_admin\n    assert parent is group\n\n    # test get_page_schema_children\n    children = await group.get_page_schema_children(None)  # type: ignore\n    assert len(children) == 2\n\n    # test site.get_page_schema_child\n    admin, parent = site.get_page_schema_child(docs_admin.unique_id)\n    assert admin is docs_admin\n    assert parent is group\n\n    # test site.get_page_schema_children\n    children = await site.get_page_schema_children(None)  # type: ignore\n    assert len(children) == 1\n    assert len(children[0].children) == 2\n\n    # test remove_child\n    group.remove_child(docs_admin.unique_id)\n    assert docs_admin not in group\n\n    # test get_page_schema_child\n    admin, parent = group.get_page_schema_child(docs_admin.unique_id)\n    assert admin is None\n    assert parent is None\n\n    # test get_page_schema_children\n    children = await group.get_page_schema_children(None)  # type: ignore\n    assert len(children) == 1\n\n    # test site.get_page_schema_child\n    admin, parent = site.get_page_schema_child(docs_admin.unique_id)\n    assert admin is None\n    assert parent is None\n\n    # test site.get_page_schema_children\n    children = await site.get_page_schema_children(None)  # type: ignore\n    assert len(children) == 1\n    assert len(children[0].children) == 1"}
{"original_code": "def test_location_class(\n    mocked_timeline,\n    test_id,\n    country,\n    country_code,\n    province,\n    latitude,\n    longitude,\n    confirmed_latest,\n    deaths_latest,\n    recovered_latest,\n):\n    # id, country, province, coordinates, confirmed, deaths, recovered\n    coords = coordinates.Coordinates(latitude=latitude, longitude=longitude)\n\n    # Timelines\n    confirmed = models.Timeline(confirmed_latest)\n    deaths = models.Timeline(deaths_latest)\n    recovered = models.Timeline(recovered_latest)\n\n    # Date now.\n    now = datetime.utcnow().isoformat() + \"Z\"\n\n    # Location.\n    location_obj = location.TimelinedLocation(\n        test_id,\n        country,\n        province,\n        coords,\n        now,\n        {\n            \"confirmed\": confirmed,\n            \"deaths\": deaths,\n            \"recovered\": recovered,\n        },\n    )\n\n    assert location_obj.country_code == country_code\n    assert location_obj.serialize() is not None"}
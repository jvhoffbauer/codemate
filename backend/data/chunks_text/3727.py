- Creates a temporary directory using PyTest's TempPathFactory and sets it as the current working directory (CWD). - Defines a path for the SQLite database file in the temporary directory. - Checks if the database already exists, deletes it if so (skips this check on Windows due to coverage issues). - Imports the `main` module of the SQL application, which contains the Flask app instance. - Reloads the imported module to ensure that any side effects of importing it are executed again during each test run. - Initializes a TestClient object for the Flask app and yields it to be used by tests. - Deletes the database file at the end of the test session if it still exists. - Restores the original CWD before returning control to PyTest.
{"original_code": "def _get_current_user(\n    db: Session = Depends(get_db), token: str = Depends(reusable_oauth2)\n) -> models.User:\n    try:\n        payload = jwt.decode(\n            token, settings.SECRET_KEY, algorithms=[settings.TOKEN_SIGNATURE_ALGORITHM]\n        )\n        token_data = schemas.TokenPayload(**payload)\n    except jwt.ExpiredSignatureError:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Token expired. Please log in again.\",\n        )\n    except (jwt.JWTError, pydantic.ValidationError):\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Could not validate credentials.\",\n        )\n    current_user = crud.user.get(db, id=token_data.sub)\n    if not current_user:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=\"User not found.\",\n        )\n    return current_user"}
{"original_code": "def test_transaction_is_jsonrpc_method(\n    probe,\n    json_request,\n    sentry_init,\n    capture_exceptions,\n    capture_events,\n    assert_log_errors,\n):\n    sentry_init(send_default_pii=True)\n    exceptions = capture_exceptions()\n    events = capture_events()\n\n    # Test in batch to ensure we correctly handle multiple requests\n    json_request(\n        [\n            {\n                \"id\": 1,\n                \"jsonrpc\": \"2.0\",\n                \"method\": \"probe\",\n                \"params\": {},\n            },\n            {\n                \"id\": 2,\n                \"jsonrpc\": \"2.0\",\n                \"method\": \"probe2\",\n                \"params\": {},\n            },\n        ]\n    )\n\n    assert {type(e) for e in exceptions} == {RuntimeError, ZeroDivisionError}\n\n    assert_log_errors(\n        \"\",\n        pytest.raises(ZeroDivisionError),\n        \"\",\n        pytest.raises(RuntimeError),\n    )\n\n    assert set([e.get(\"transaction\") for e in events]) == {\n        \"test_sentry.probe.<locals>.probe\",\n        \"test_sentry.probe.<locals>.probe2\",\n    }"}
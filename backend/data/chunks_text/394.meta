{"original_code": "def test_sa_relationship_property(clear_sqlmodel):\n    \"\"\"Test https://github.com/tiangolo/sqlmodel/issues/315#issuecomment-1272122306\"\"\"\n\n    class Team(SQLModel, table=True):\n        id: Optional[int] = Field(default=None, primary_key=True)\n        name: str = Field(unique=True)\n        heroes: List[\"Hero\"] = Relationship(  # noqa: F821\n            sa_relationship=RelationshipProperty(\"Hero\", back_populates=\"team\")\n        )\n\n    class Hero(SQLModel, table=True):\n        id: Optional[int] = Field(default=None, primary_key=True)\n        name: str = Field(unique=True)\n        team_id: Optional[int] = Field(default=None, foreign_key=\"team.id\")\n        team: Optional[Team] = Relationship(\n            sa_relationship=RelationshipProperty(\"Team\", back_populates=\"heroes\")\n        )\n\n    team_preventers = Team(name=\"Preventers\")\n    hero_rusty_man = Hero(name=\"Rusty-Man\", team=team_preventers)\n\n    engine = create_engine(\"sqlite://\", echo=True)\n\n    SQLModel.metadata.create_all(engine)\n\n    with Session(engine) as session:\n        session.add(hero_rusty_man)\n        session.commit()\n        session.refresh(hero_rusty_man)\n        # The next statement should not raise an AttributeError\n        assert hero_rusty_man.team\n        assert hero_rusty_man.team.name == \"Preventers\""}
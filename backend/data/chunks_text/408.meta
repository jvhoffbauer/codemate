{"original_code": "def test_validation_pydantic_v1(clear_sqlmodel):\n    \"\"\"Test validation of implicit and explicit None values.\n\n    # For consistency with pydantic, validators are not to be called on\n    # arguments that are not explicitly provided.\n\n    https://github.com/tiangolo/sqlmodel/issues/230\n    https://github.com/samuelcolvin/pydantic/issues/1223\n\n    \"\"\"\n    from pydantic import validator\n\n    class Hero(SQLModel):\n        name: Optional[str] = None\n        secret_name: Optional[str] = None\n        age: Optional[int] = None\n\n        @validator(\"name\", \"secret_name\", \"age\")\n        def reject_none(cls, v):\n            assert v is not None\n            return v\n\n    Hero.validate({\"age\": 25})\n\n    with pytest.raises(ValidationError):\n        Hero.validate({\"name\": None, \"age\": 25})"}
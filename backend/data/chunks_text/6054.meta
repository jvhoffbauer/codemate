{"original_code": "def test_field_list():\n    class User(BaseModel):\n        tags: List[str] = Field([], title=\"\u6807\u7b7e\")\n        email: List[str] = Field(\n            [],\n            title=\"\u90ae\u7bb1\u5217\u8868\",\n            amis_form_item=amis.InputArray(items=amis.InputText(type=\"input-email\")),\n        )\n        names: list = Field([], title=\"\u59d3\u540d\u5217\u8868\")\n\n    # test tags\n    modelfield = model_fields(User)[\"tags\"]\n    assert modelfield\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield, set_default=True)\n    assert formitem.type == \"input-array\"\n    assert formitem.name == \"tags\"\n    assert formitem.label == \"\u6807\u7b7e\"\n    assert formitem.value == []\n    assert formitem.items.type == \"input-text\"  # type: ignore\n\n    # test email\n    modelfield = model_fields(User)[\"email\"]\n    assert modelfield\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield)\n    assert formitem.type == \"input-array\"\n    assert formitem.name == \"email\"\n    assert formitem.items.type == \"input-email\"  # type: ignore\n\n    # test names\n    modelfield = model_fields(User)[\"names\"]\n    assert modelfield\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield)\n    assert formitem.type == \"input-array\"\n    assert formitem.name == \"names\""}
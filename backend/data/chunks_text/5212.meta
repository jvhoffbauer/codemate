{"original_code": "@dataclass\nclass TMSFactory:\n    \"\"\"TileMatrixSet endpoints Factory.\"\"\"\n\n    supported_tms: TileMatrixSets = morecantile_tms\n\n    # FastAPI router\n    router: APIRouter = field(default_factory=APIRouter)\n\n    # Router Prefix is needed to find the path for /tile if the TilerFactory.router is mounted\n    # with other router (multiple `.../tile` routes).\n    # e.g if you mount the route with `/cog` prefix, set router_prefix to cog and\n    router_prefix: str = \"\"\n\n    def __post_init__(self):\n        \"\"\"Post Init: register route and configure specific options.\"\"\"\n        self.register_routes()\n\n    def url_for(self, request: Request, name: str, **path_params: Any) -> str:\n        \"\"\"Return full url (with prefix) for a specific endpoint.\"\"\"\n        url_path = self.router.url_path_for(name, **path_params)\n        base_url = str(request.base_url)\n        if self.router_prefix:\n            base_url += self.router_prefix.lstrip(\"/\")\n        return url_path.make_absolute_url(base_url=base_url)\n\n    def register_routes(self):\n        \"\"\"Register TMS endpoint routes.\"\"\"\n\n        @self.router.get(\n            r\"/tileMatrixSets\",\n            response_model=TileMatrixSetList,\n            response_model_exclude_none=True,\n            summary=\"Retrieve the list of available tiling schemes (tile matrix sets).\",\n            operation_id=\"getTileMatrixSetsList\",\n        )\n        async def TileMatrixSet_list(request: Request):\n            \"\"\"\n            OGC Specification: http://docs.opengeospatial.org/per/19-069.html#_tilematrixsets\n            \"\"\"\n            return {\n                \"tileMatrixSets\": [\n                    {\n                        \"id\": tms,\n                        \"title\": tms,\n                        \"links\": [\n                            {\n                                \"href\": self.url_for(\n                                    request,\n                                    \"TileMatrixSet_info\",\n                                    TileMatrixSetId=tms,\n                                ),\n                                \"rel\": \"item\",\n                                \"type\": \"application/json\",\n                            }\n                        ],\n                    }\n                    for tms in self.supported_tms.list()\n                ]\n            }\n\n        @self.router.get(\n            r\"/tileMatrixSets/{TileMatrixSetId}\",\n            response_model=TileMatrixSet,\n            response_model_exclude_none=True,\n            summary=\"Retrieve the definition of the specified tiling scheme (tile matrix set).\",\n            operation_id=\"getTileMatrixSet\",\n        )\n        async def TileMatrixSet_info(\n            TileMatrixSetId: Literal[tuple(self.supported_tms.list())] = Path(\n                ..., description=\"TileMatrixSet Name.\"\n            )\n        ):\n            \"\"\"\n            OGC Specification: http://docs.opengeospatial.org/per/19-069.html#_tilematrixset\n            \"\"\"\n            return self.supported_tms.get(TileMatrixSetId)"}
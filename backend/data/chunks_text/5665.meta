{"original_code": "    def as_page_body(\n        self, group_extra: Dict[str, Any] = None, item_extra: Dict[str, Any] = None\n    ):\n        if self.children:\n            exclude = {\n                \"type\",\n                \"url\",\n                \"schema_\",\n                \"schemaApi\",\n                \"link\",\n                \"redirect\",\n                \"rewrite\",\n                \"isDefaultPage\",\n                \"children\",\n            }\n            if self.tabsMode is None:\n                body = App(pages=[PageSchema(children=self.children)])\n            elif self.tabsMode == TabsModeEnum.collapse:\n                body = (\n                    CollapseGroup.parse_obj(\n                        self.dict(exclude=exclude, exclude_defaults=True)\n                    )\n                    .update_from_kwargs(\n                        body=[\n                            CollapseGroup.CollapseItem.parse_obj(\n                                item.dict(exclude=exclude, exclude_defaults=True)\n                            )\n                            .update_from_kwargs(\n                                header=item.label,\n                                body=item.as_page_body(group_extra, item_extra),\n                            )\n                            .update_from_dict(item_extra or {})\n                            for item in self.children\n                        ],\n                    )\n                    .update_from_dict(group_extra or {})\n                )\n            else:\n                body = (\n                    Tabs.parse_obj(self.dict(exclude=exclude, exclude_defaults=True))\n                    .update_from_kwargs(\n                        mountOnEnter=True,\n                        tabs=[\n                            Tabs.Item.parse_obj(\n                                item.dict(exclude=exclude, exclude_defaults=True)\n                            )\n                            .update_from_kwargs(\n                                title=item.label,\n                                tab=item.as_page_body(group_extra, item_extra),\n                            )\n                            .update_from_dict(item_extra or {})\n                            for item in self.children\n                        ],\n                    )\n                    .update_from_dict(group_extra or {})\n                )\n        elif self.schema_:\n            body = self.schema_\n            if isinstance(body, Iframe):\n                body.height = body.height or 1080\n        elif self.schemaApi:\n            body = Service(schemaApi=self.schemaApi)\n        elif self.link:\n            body = Page(body=Link(href=self.link, body=self.label, blank=True))\n        else:\n            body = None\n        return body"}
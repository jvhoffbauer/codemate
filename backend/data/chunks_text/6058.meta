{"original_code": "def test_field_amis_extra_param():\n    class User(BaseModel):\n        field1: str = Field(\n            ...,\n            title=\"\u5b57\u6bb51\",\n            amis_form_item=amis.Textarea(),\n            amis_filter_item={\n                \"type\": \"select\",\n                \"options\": [\n                    {\"label\": \"\u9009\u98791\", \"value\": \"1\"},\n                    {\"label\": \"\u9009\u98792\", \"value\": \"2\"},\n                ],\n            },\n            amis_table_column=amis.TableColumn(type=\"audio\", width=100),\n        )\n        field2: str = Field(\n            ...,\n            title=\"\u5b57\u6bb52\",\n            amis_form_item=lambda: amis.Textarea(),\n            amis_filter_item=lambda: {\n                \"type\": \"select\",\n                \"options\": [\n                    {\"label\": \"\u9009\u98791\", \"value\": \"1\"},\n                    {\"label\": \"\u9009\u98792\", \"value\": \"2\"},\n                ],\n            },\n        )\n\n    modelfield = model_fields(User)[\"field1\"]\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield, set_default=True)\n    assert formitem.name == \"field1\"\n    assert formitem.type == \"textarea\"\n    assert formitem.label == \"\u5b57\u6bb51\"\n\n    # filter\n    filteritem = amis_parser.as_form_item(modelfield, is_filter=True, set_default=True)\n    assert filteritem.type == \"select\"\n    assert filteritem.label == \"\u5b57\u6bb51\"\n\n    # table column\n    column = amis_parser.as_table_column(modelfield)\n    assert column.type == \"audio\"\n    assert column.width == 100\n\n    modelfield2 = model_fields(User)[\"field2\"]\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield2, set_default=True)\n    assert formitem.name == \"field2\"\n    assert formitem.type == \"textarea\"\n    assert formitem.label == \"\u5b57\u6bb52\"\n\n    # filter\n    filteritem = amis_parser.as_form_item(modelfield2, is_filter=True, set_default=True)\n    assert filteritem.type == \"select\"\n    assert filteritem.label == \"\u5b57\u6bb52\""}
{"original_code": "    def _parser_query_value(\n        value: Any, operator: str = \"__eq__\", python_type_parse: Callable = str\n    ) -> Tuple[Optional[str], Union[tuple, None]]:\n        if isinstance(value, str):\n            if not value:\n                return None, None\n            match = sql_operator_pattern.match(value)\n            if match:\n                op_key = match.group(1)\n                operator = sql_operator_map.get(op_key)\n                value = value.replace(f\"[{op_key}]\", \"\")\n                if not value:\n                    return None, None\n                if operator in [\"like\", \"not_like\"] and value.find(\"%\") == -1:\n                    return operator, (f\"%{value}%\",)\n                elif operator in [\"in_\", \"not_in\"]:\n                    return operator, (\n                        list(map(python_type_parse, set(value.split(\",\")))),\n                    )\n                elif operator == \"between\":\n                    value = value.split(\",\")[:2]\n                    if len(value) < 2:\n                        return None, None\n                    return operator, tuple(map(python_type_parse, value))\n        return operator, (python_type_parse(value),)"}
{"original_code": "def add_route_dependencies(\n    routes: List[BaseRoute],\n    *,\n    scopes: List[EndpointScope],\n    dependencies=List[params.Depends],\n):\n    \"\"\"Add dependencies to routes.\n\n    Allows a developer to add dependencies to a route after the route has been defined.\n\n    \"\"\"\n    for route in routes:\n        for scope in scopes:\n            match, _ = route.matches({\"type\": \"http\", **scope})  # type: ignore\n            if match != Match.FULL:\n                continue\n\n            # Mimicking how APIRoute handles dependencies:\n            # https://github.com/tiangolo/fastapi/blob/1760da0efa55585c19835d81afa8ca386036c325/fastapi/routing.py#L408-L412\n            for depends in dependencies[::-1]:\n                route.dependant.dependencies.insert(  # type: ignore\n                    0,\n                    get_parameterless_sub_dependant(\n                        depends=depends, path=route.path_format  # type: ignore\n                    ),\n                )\n\n            # Register dependencies directly on route so that they aren't ignored if\n            # the routes are later associated with an app (e.g. app.include_router(router))\n            # https://github.com/tiangolo/fastapi/blob/58ab733f19846b4875c5b79bfb1f4d1cb7f4823f/fastapi/applications.py#L337-L360\n            # https://github.com/tiangolo/fastapi/blob/58ab733f19846b4875c5b79bfb1f4d1cb7f4823f/fastapi/routing.py#L677-L678\n            route.dependencies.extend(dependencies)  # type: ignore"}
{"original_code": "def test_type_hints(ep, app, app_client):\n    Input = List[str]\n    Output = Dict[str, List[List[float]]]\n\n    @ep.method()\n    def my_method__with_typehints(arg: Input) -> Output:\n        return {}\n\n    app.bind_entrypoint(ep)\n\n    resp = app_client.get(\"/openrpc.json\")\n    schema = resp.json()\n\n    assert len(schema[\"methods\"]) == 1\n    assert schema[\"methods\"][0][\"params\"] == [\n        {\n            \"name\": \"arg\",\n            \"schema\": {\"title\": \"Arg\", \"type\": \"array\", \"items\": {\"type\": \"string\"}},\n            \"required\": True,\n        }\n    ]\n    assert schema[\"methods\"][0][\"result\"] == {\n        \"name\": \"my_method__with_typehints_Result\",\n        \"schema\": {\n            \"title\": \"Result\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n                \"type\": \"array\",\n                \"items\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}},\n            },\n        },\n    }"}
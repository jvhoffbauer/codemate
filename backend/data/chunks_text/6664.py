- Defines a function `ep` that takes an endpoint path as input and returns a JSON RPC entrypoint with three middleware functions added to it.
- Uses the `defaultdict` class from the built-in `collections` module to store information about each request/response pair in a dictionary indexed by their IDs.
- Creates three context managers using the `@contextlib.asynccontextmanager` decorator for adding middleware functions at different stages of the request handling process. The first one is called before any other middleware or handler, the second one is called after all handlers have finished executing but before returning the response, and the last one is called after all middleware and handlers have executed successfully. Each middleware function appends a tuple containing its name, role ('enter' or 'exit'), the original request object, the final response object, and any exceptions raised during execution to the corresponding list stored in the `_calls` dictionary.
- Registers the `probe` method as a new endpoint method that accepts a single string argument named `data`. This method simply returns the received value without modification.
- Sets the `calls` attribute of the returned entrypoint instance to the `_calls` dictionary created earlier, allowing easy access to detailed information about every request handled by this endpoint.
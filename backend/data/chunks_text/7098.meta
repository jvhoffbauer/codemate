{"original_code": "@app.post(\"/job/interval/schedule/\", tags=[\"schedule\"], summary=\"\u5f00\u542f\u5b9a\u65f6:\u95f4\u9694\u65f6\u95f4\u5faa\u73af\")\nasync def add_interval_job(\n    seconds: int = Body(120, title=\"\u5faa\u73af\u95f4\u9694\u65f6\u95f4/\u79d2,\u9ed8\u8ba4120s\", embed=True),\n    job_id: str = Body(..., title=\"\u4efb\u52a1id\", embed=True),\n    run_time: int = Body(\n        time.time(), title=\"\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\u95f4\", description=\"\u9ed8\u8ba4\u7acb\u5373\u6267\u884c\", embed=True\n    ),\n):\n    res = Schedule.get_job(job_id=job_id)\n    if res:\n        return resp_fail(msg=f\"{job_id} job already exists\")\n    schedule_job = Schedule.add_job(\n        cron_task,\n        \"interval\",\n        args=(job_id,),\n        seconds=seconds,  # \u5faa\u73af\u95f4\u9694\u65f6\u95f4 \u79d2\n        id=job_id,  # job ID\n        next_run_time=datetime.fromtimestamp(run_time),  # \u7acb\u5373\u6267\u884c\n    )\n    return resp_ok(data={\"job_id\": schedule_job.id})"}
{"original_code": "def test_field_enum():\n    class UserStatus(str, Enum):\n        NORMAL = \"\u6b63\u5e38\"\n        DISABLED = \"\u7981\u7528\"\n\n    class User(BaseModel):\n        status: Optional[UserStatus] = Field(None, title=\"\u72b6\u6001\")\n\n    modelfield = model_fields(User)[\"status\"]\n\n    # formitem\n    formitem = amis_parser.as_form_item(modelfield, set_default=True)\n    assert formitem.type == \"select\"\n    assert formitem.label == \"\u72b6\u6001\"\n    assert formitem.value is None\n    assert formitem.options == [  # type: ignore\n        {\"label\": \"\u6b63\u5e38\", \"value\": \"\u6b63\u5e38\"},\n        {\"label\": \"\u7981\u7528\", \"value\": \"\u7981\u7528\"},\n    ]\n    # filter\n    filteritem = amis_parser.as_form_item(modelfield, is_filter=True, set_default=True)\n    assert filteritem.type == \"select\"\n    assert filteritem.label == \"\u72b6\u6001\"\n    assert filteritem.value is None\n    assert filteritem.options == [  # type: ignore\n        {\"label\": \"\u6b63\u5e38\", \"value\": \"\u6b63\u5e38\"},\n        {\"label\": \"\u7981\u7528\", \"value\": \"\u7981\u7528\"},\n    ]\n    # table column\n    column = amis_parser.as_table_column(modelfield)\n    assert column.type == \"mapping\"\n    assert column.label == \"\u72b6\u6001\"\n    assert set(column.map.keys()) == {\"\u6b63\u5e38\", \"\u7981\u7528\"}  # type: ignore"}
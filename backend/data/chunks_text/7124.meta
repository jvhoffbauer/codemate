{"original_code": "def check_jwt_token(\n    token: Optional[str] = Header(..., description=\"\u767b\u5f55token\")\n) -> Union[str, Any]:\n    \"\"\"\n    \u89e3\u6790\u9a8c\u8bc1token  \u9ed8\u8ba4\u9a8c\u8bc1headers\u91cc\u9762\u4e3atoken\u5b57\u6bb5\u7684\u6570\u636e\n    \u53ef\u4ee5\u7ed9 headers \u91cc\u9762token\u66ff\u6362\u522b\u540d, \u4ee5\u4e0b\u793a\u4f8b\u4e3a X-Token\n    token: Optional[str] = Header(None, alias=\"X-Token\")\n    :param token:\n    :return:\n    \"\"\"\n\n    try:\n        payload = jwt.decode(\n            token, settings.SECRET_KEY, algorithms=[settings.ALGORITHM]\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise custom_exc.TokenExpired()\n    except (jwt.JWTError, ValidationError, AttributeError):\n        raise custom_exc.TokenAuthError()"}
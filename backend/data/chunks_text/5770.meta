{"original_code": "    async def get_form_item_on_foreign_key(\n        self, request: Request, modelfield: ModelField, is_filter: bool = False\n    ) -> Union[Service, SchemaNode, None]:\n        column = self.parser.get_column(modelfield.alias)\n        if column is None:\n            return None\n        foreign_keys = list(column.foreign_keys) or None\n        if foreign_keys is None:\n            return None\n        admin = self.app.site.get_model_admin(foreign_keys[0].column.table.name)\n        if not admin:\n            return None\n        url = admin.router_path + admin.page_path\n        label = modelfield.field_info.title or modelfield.name\n        remark = (\n            Remark(content=modelfield.field_info.description)\n            if modelfield.field_info.description\n            else None\n        )\n        picker = Picker(\n            name=modelfield.alias,\n            label=label,\n            labelField=\"name\",\n            valueField=\"id\",\n            required=(modelfield.required and not is_filter),\n            modalMode=\"dialog\",\n            inline=is_filter,\n            size=\"full\",\n            labelRemark=remark,\n            pickerSchema=\"${body}\",\n            source=\"${body.api}\",\n        )\n        return Service(\n            name=modelfield.alias,\n            schemaApi=AmisAPI(\n                method=\"post\",\n                url=url,\n                data={},\n                cache=300000,\n                responseData={\"controls\": [picker]},\n            ),\n        )"}
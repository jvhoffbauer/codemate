{"original_code": "        @self.router.get(r\"/preview\", **img_endpoint_params)\n        @self.router.get(r\"/preview.{format}\", **img_endpoint_params)\n        def preview(\n            format: ImageType = Query(\n                None, description=\"Output image type. Default is auto.\"\n            ),\n            src_path=Depends(self.path_dependency),\n            layer_params=Depends(self.layer_dependency),\n            dataset_params=Depends(self.dataset_dependency),\n            img_params=Depends(self.img_dependency),\n            post_process=Depends(self.process_dependency),\n            rescale: Optional[List[Tuple[float, ...]]] = Depends(RescalingParams),\n            color_formula: Optional[str] = Query(\n                None,\n                title=\"Color Formula\",\n                description=\"rio-color formula (info: https://github.com/mapbox/rio-color)\",\n            ),\n            colormap=Depends(self.colormap_dependency),\n            render_params=Depends(self.render_dependency),\n            reader_params=Depends(self.reader_dependency),\n            env=Depends(self.environment_dependency),\n        ):\n            \"\"\"Create preview of a dataset.\"\"\"\n            with rasterio.Env(**env):\n                with self.reader(src_path, **reader_params) as src_dst:\n                    image = src_dst.preview(\n                        **layer_params,\n                        **img_params,\n                        **dataset_params,\n                    )\n                    dst_colormap = getattr(src_dst, \"colormap\", None)\n\n            if post_process:\n                image = post_process(image)\n\n            if rescale:\n                image.rescale(rescale)\n\n            if color_formula:\n                image.apply_color_formula(color_formula)\n\n            if cmap := colormap or dst_colormap:\n                image = image.apply_colormap(cmap)\n\n            if not format:\n                format = ImageType.jpeg if image.mask.all() else ImageType.png\n\n            content = image.render(\n                img_format=format.driver,\n                **format.profile,\n                **render_params,\n            )\n\n            return Response(content, media_type=format.mediatype)"}
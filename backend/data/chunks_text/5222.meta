{"original_code": "        def metadata(algorithm: BaseAlgorithm) -> AlgorithmMetadata:\n            \"\"\"Algorithm Metadata\"\"\"\n            props = algorithm.schema()[\"properties\"]\n\n            # Inputs Metadata\n            ins = {\n                k.replace(\"input_\", \"\"): v[\"default\"]\n                for k, v in props.items()\n                if k.startswith(\"input_\") and \"default\" in v\n            }\n\n            # Output Metadata\n            outs = {\n                k.replace(\"output_\", \"\"): v[\"default\"]\n                for k, v in props.items()\n                if k.startswith(\"output_\") and \"default\" in v\n            }\n\n            # Algorithm Parameters\n            params = {\n                k: v\n                for k, v in props.items()\n                if not k.startswith(\"input_\") and not k.startswith(\"output_\")\n            }\n            return AlgorithmMetadata(inputs=ins, outputs=outs, parameters=params)"}
{"original_code": "def test_path_param_in_prefix():\n    \"\"\"Test path params in prefix.\"\"\"\n\n    @dataclass\n    class EndpointFactory(BaseTilerFactory):\n        def register_routes(self):\n            \"\"\"register endpoints.\"\"\"\n\n            @self.router.get(\"/{param2}.json\")\n            def route2(\n                request: Request, param1: int = Path(...), param2: str = Path(...)\n            ):\n                \"\"\"return url.\"\"\"\n                return {\"url\": self.url_for(request, \"route1\", param2=param2)}\n\n            @self.router.get(\"/{param2}\")\n            def route1(param1: int = Path(...), param2: str = Path(...)):\n                \"\"\"return param.\"\"\"\n                return {\"value\": param2}\n\n    app = FastAPI()\n    endpoints = EndpointFactory(reader=Reader, router_prefix=\"/prefixed/{param1}\")\n    app.include_router(endpoints.router, prefix=\"/prefixed/{param1}\")\n    client = TestClient(app)\n\n    response = client.get(\"/p\")\n    assert response.status_code == 404\n\n    response = client.get(\"/prefixed/100/value\")\n    assert response.json()[\"value\"] == \"value\"\n\n    response = client.get(\"/prefixed/100/value.json\")\n    assert response.json()[\"url\"] == \"http://testserver/prefixed/100/value\""}
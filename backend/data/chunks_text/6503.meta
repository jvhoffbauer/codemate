{"original_code": "def api_package(request, pytester):\n    \"\"\"Create package with structure\n        api \\\n            mobile.py\n            web.py\n\n    mobile.py and web.py has similar content except entrypoint path\n    \"\"\"\n\n    # Re-use our infrastructure layer\n    try:\n        pytester.copy_example(\"tests/conftest.py\")\n    except LookupError:\n        pytester.copy_example(\"conftest.py\")\n\n    # Create api/web.py and api/mobile.py files with same methods\n    entrypoint_tpl = \"\"\"\nfrom fastapi import Body\nfrom typing import List\n\n\nimport fastapi_jsonrpc as jsonrpc\n\napi_v1 = jsonrpc.Entrypoint(\n    '{ep_path}',\n)\n\n@api_v1.method()\ndef probe(\n    {unique_param_name}: List[str] = Body(..., examples=['111', '222']),\n    amount: int = Body(..., gt=5, examples=[10]),\n) -> List[int]:\n    return [1, 2, 3]\n\"\"\"\n\n    if request.param == \"uniq-sig\":\n        mobile_param_name = \"mobile_data\"\n        web_param_name = \"web_data\"\n    else:\n        assert request.param == \"same-sig\"\n        mobile_param_name = web_param_name = \"data\"\n\n    api_dir = pytester.mkpydir(\"api\")\n    mobile_py = api_dir.joinpath(\"mobile.py\")\n    mobile_py.write_text(\n        entrypoint_tpl.format(\n            ep_path=\"/api/v1/mobile/jsonrpc\",\n            unique_param_name=mobile_param_name,\n        ),\n    )\n\n    web_py = api_dir.joinpath(\"web.py\")\n    web_py.write_text(\n        entrypoint_tpl.format(\n            ep_path=\"/api/v1/web/jsonrpc\",\n            unique_param_name=web_param_name,\n        ),\n    )\n    return api_dir"}
{"original_code": "async def test_update_fields(\n    app: FastAPI, async_client: AsyncClient, fake_users, models\n):\n    class UserCrud(SqlalchemyCrud):\n        router_prefix = \"/user\"\n        update_fields = [models.User.username]\n\n    ins = UserCrud(models.User, db.engine).register_crud()\n\n    app.include_router(ins.router)\n\n    # test schemas\n    openapi = app.openapi()\n    schemas = openapi[\"components\"][\"schemas\"]\n    assert \"password\" not in schemas[\"UserCrudUpdate\"][\"properties\"]\n    assert \"username\" in schemas[\"UserCrudUpdate\"][\"properties\"]\n\n    # test api\n    res = await async_client.put(\"/user/item/1\", json={\"username\": \"new_name\"})\n    assert res.json()[\"data\"] == 1\n\n    res = await async_client.put(\"/user/item/1\", json={\"password\": \"new_password\"})\n    assert res.json() == {\"detail\": \"error data handle\"}"}
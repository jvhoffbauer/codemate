{"original_code": "    async def handle_http_request(self, http_request: Request):\n        background_tasks = BackgroundTasks()\n\n        sub_response = Response()\n        del sub_response.headers[\"content-length\"]\n        sub_response.status_code = None  # type: ignore\n\n        try:\n            body = await self.parse_body(http_request)\n        except Exception as exc:\n            resp = await self.entrypoint.handle_exception_to_resp(exc)\n            response = self.response_class(content=resp, background=background_tasks)\n        else:\n            try:\n                resp = await self.handle_body(\n                    http_request, background_tasks, sub_response, body\n                )\n            except NoContent:\n                # no content for successful notifications\n                response = Response(\n                    media_type=\"application/json\", background=background_tasks\n                )\n            else:\n                response = self.response_class(\n                    content=resp, background=background_tasks\n                )\n\n        response.headers.raw.extend(sub_response.headers.raw)\n        if sub_response.status_code:\n            response.status_code = sub_response.status_code\n\n        return response"}
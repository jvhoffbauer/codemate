{"original_code": "    def create_model_by_fields(\n        name: str,\n        fields: Sequence[ModelField],\n        *,\n        set_none: bool = False,\n        extra: str = \"ignore\",\n        **kwargs,\n    ) -> Type[BaseModel]:\n        if kwargs.pop(\"orm_mode\", False):\n            kwargs.setdefault(\"from_attributes\", True)\n        __config__ = marge_model_config(\n            AllowExtraModelMixin, {\"extra\": extra, **kwargs}\n        )\n        __validators__ = None\n\n        if set_none:\n            __validators__ = {\n                \"root_validator_skip_blank\": model_validator(mode=\"before\")(\n                    root_validator_skip_blank\n                )\n            }\n            for f in fields:\n                f.field_info.annotation = Optional[f.field_info.annotation]\n                f.field_info.default = None\n        field_params = {f.name: (f.field_info.annotation, f.field_info) for f in fields}\n        model: Type[BaseModel] = create_model(\n            name, __config__=__config__, __validators__=__validators__, **field_params\n        )\n        return model"}
{"original_code": "    def __init__(\n        self,\n        entrypoint: \"Entrypoint\",\n        path: str,\n        func: Union[FunctionType, Coroutine],\n        *,\n        result_model: Type[Any] = None,\n        name: str = None,\n        errors: List[Type[BaseError]] = None,\n        dependencies: Sequence[Depends] = None,\n        response_class: Type[Response] = JSONResponse,\n        request_class: Type[JsonRpcRequest] = JsonRpcRequest,\n        middlewares: Sequence[JsonRpcMiddleware] = None,\n        **kwargs,\n    ):\n        name = name or func.__name__\n        result_model = result_model or func.__annotations__.get(\"return\")\n\n        _, path_format, _ = compile_path(path)\n        func_dependant = get_dependant(path=path_format, call=func)\n        insert_dependencies(func_dependant, dependencies)\n        insert_dependencies(func_dependant, entrypoint.common_dependencies)\n        fix_query_dependencies(func_dependant)\n        flat_dependant = get_flat_dependant(func_dependant, skip_repeats=True)\n\n        _Request = make_request_model(name, func.__module__, flat_dependant.body_params)\n        _Response = make_response_model(name, func.__module__, result_model)\n\n        # Only needed to generate OpenAPI\n        async def endpoint(__request__: _Request):\n            del __request__\n\n        endpoint.__name__ = func.__name__\n        endpoint.__doc__ = func.__doc__\n\n        responses = errors_responses(errors)\n\n        super().__init__(\n            path,\n            endpoint,\n            methods=[\"POST\"],\n            name=name,\n            response_class=response_class,\n            response_model=_Response,\n            responses=responses,\n            **kwargs,\n        )\n\n        # Add dependencies and other parameters from func_dependant for correct OpenAPI generation\n        self.dependant.path_params = func_dependant.path_params\n        self.dependant.header_params = func_dependant.header_params\n        self.dependant.cookie_params = func_dependant.cookie_params\n        self.dependant.dependencies = func_dependant.dependencies\n        self.dependant.security_requirements = func_dependant.security_requirements\n\n        self.func = func\n        self.func_dependant = func_dependant\n        self.entrypoint = entrypoint\n        self.middlewares = middlewares or []\n        self.app = request_response(self.handle_http_request)\n        self.request_class = request_class\n        self.result_model = result_model\n        self.params_model = _Request.model_fields[\"params\"].annotation\n        self.errors = errors or []"}
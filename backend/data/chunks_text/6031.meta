{"original_code": "async def test_PageAdmin(site: AdminSite, async_client: AsyncClient):\n    @site.register_admin\n    class TmpAdmin(admin.PageAdmin):\n        page_path = \"/test\"\n\n        async def get_page(self, request: Request) -> Page:\n            return Page(title=\"hello\", body=\"Test Amis Page\")\n\n    ins = site.get_admin_or_create(TmpAdmin)\n    assert ins.page_path == \"/test\"\n    assert ins.page_schema.url == ins.router_path + ins.page_path\n\n    site.register_router()\n    # test amis json\n    res = await async_client.post(ins.router_path + ins.page_path)\n    assert res.json()[\"data\"] == {\n        \"type\": \"page\",\n        \"title\": \"hello\",\n        \"body\": \"Test Amis Page\",\n    }\n    # test amis html\n    res = await async_client.get(ins.router_path + ins.page_path)\n    assert res.text.find(Page(title=\"hello\", body=\"Test Amis Page\").amis_json())\n    # test amis json _update\n    res = await async_client.post(\n        ins.router_path + ins.page_path,\n        json={\"_update\": {\"title\": \"new title\", \"extra\": \"extra data\"}},\n    )\n    assert res.json()[\"data\"] == {\n        \"type\": \"page\",\n        \"title\": \"new title\",\n        \"body\": \"Test Amis Page\",\n        \"extra\": \"extra data\",\n    }"}
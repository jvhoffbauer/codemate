{"original_code": "def test_point(httpx, rio, app):\n    \"\"\"test crop endpoints.\"\"\"\n    httpx.get = mock_RequestGet\n    rio.open = mock_rasterio_open\n\n    # Missing Assets or Expression\n    response = app.get(\"/stac/point/23.878,32.063?url=https://myurl.com/item.json\")\n    assert response.status_code == 400\n\n    response = app.get(\n        \"/stac/point/23.878,32.063?url=https://myurl.com/item.json&assets=B01\"\n    )\n    assert response.status_code == 200\n    body = response.json()\n    assert body[\"coordinates\"] == [23.878, 32.063]\n    assert body[\"values\"] == [3565]\n    assert body[\"band_names\"] == [\"B01_b1\"]\n\n    response = app.get(\n        \"/stac/point/23.878,32.063?url=https://myurl.com/item.json&expression=B01_b1*2\"\n    )\n    assert response.status_code == 200\n    body = response.json()\n    assert body[\"coordinates\"] == [23.878, 32.063]\n    assert body[\"values\"] == [7130]\n    assert body[\"band_names\"] == [\"B01_b1*2\"]\n\n    response = app.get(\n        \"/stac/point/23.878,32.063?url=https://myurl.com/item.json&expression=B01_b1/B09_b1\"\n    )\n    assert response.status_code == 200\n    body = response.json()\n    assert body[\"coordinates\"] == [23.878, 32.063]\n    assert round(body[\"values\"][0], 2) == 0.49"}
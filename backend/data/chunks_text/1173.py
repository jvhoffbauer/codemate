- This function creates a new user in the database using FastAPI's `@app.post` decorator and returns the newly created user as JSON with the help of Pydantic's schema validation (`response_model`) and SQLAlchemy's CRUD operations (`crud`).
- The function takes an instance of the `UserCreate` schema as input (`user: schemas.UserCreate`) and checks whether there is already a user with that email address by calling `crud.get_user_by_email`. If such a user exists, it raises a custom HTTP exception with status code 400 and error message "Email already registered". Otherwise, it calls `crud.create_user` to insert the new user into the database.
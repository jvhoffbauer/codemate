{"original_code": "    def __init__(\n        self,\n        path: str,\n        *,\n        name: str = None,\n        errors: List[Type[BaseError]] = None,\n        dependencies: Sequence[Depends] = None,\n        common_dependencies: Sequence[Depends] = None,\n        middlewares: Sequence[JsonRpcMiddleware] = None,\n        scheduler_factory: Callable[..., aiojobs.Scheduler] = aiojobs.Scheduler,\n        scheduler_kwargs: dict = None,\n        request_class: Type[JsonRpcRequest] = JsonRpcRequest,\n        **kwargs,\n    ) -> None:\n        super().__init__(redirect_slashes=False)\n        if errors is None:\n            errors = list(self.default_errors)\n        self.middlewares = middlewares or []\n        self.scheduler_factory = scheduler_factory\n        self.scheduler_kwargs = scheduler_kwargs\n        self.request_class = request_class\n        self.scheduler = None\n        self.callee_module = inspect.getmodule(inspect.stack()[1][0]).__name__\n        self.entrypoint_route = self.entrypoint_route_class(\n            self,\n            path,\n            name=name,\n            errors=errors,\n            dependencies=dependencies,\n            common_dependencies=common_dependencies,\n            request_class=request_class,\n            **kwargs,\n        )\n        self.routes.append(self.entrypoint_route)"}
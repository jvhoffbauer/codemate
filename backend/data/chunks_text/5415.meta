{"original_code": "def test_AutoFormat_Colormap():\n    \"\"\"Make sure we take both alpha/mask into account.\"\"\"\n    app = FastAPI()\n    cog = TilerFactory()\n    app.include_router(cog.router)\n\n    with TestClient(app) as client:\n        cmap = urlencode(\n            {\n                \"colormap\": json.dumps(\n                    [\n                        # ([min, max], [r, g, b, a])\n                        ([0, 1], [255, 255, 255, 0]),  # should be masked\n                        ([2, 6000], [255, 0, 0, 255]),\n                        ([6001, 300000], [0, 255, 0, 255]),\n                    ]\n                )\n            }\n        )\n\n        response = client.get(f\"/preview?url={DATA_DIR}/cog.tif&bidx=1&{cmap}\")\n        assert response.status_code == 200\n        assert response.headers[\"content-type\"] == \"image/png\"\n\n        with MemoryFile(response.content) as mem:\n            with mem.open() as dst:\n                img = dst.read()\n                assert img[:, 0, 0].tolist() == [\n                    0,\n                    0,\n                    0,\n                    0,\n                ]  # when creating a PNG, GDAL will set masked value to 0\n                assert img[:, 500, 500].tolist() == [255, 0, 0, 255]"}
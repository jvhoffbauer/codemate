{"original_code": "async def test_list_display_join(site: AdminSite, async_client: AsyncClient, models):\n    @site.register_admin\n    class ArticleAdmin(admin.ModelAdmin):\n        model = models.Article\n        list_display = [\n            models.Article.title,\n            models.User.username,\n            \"description\",\n            models.User.username.label(\"nickname\"),\n            LabelField(\n                label=models.User.password.label(\"pwd\"),\n                field=Field(None, title=\"pwd_title\"),\n            ),\n        ]\n\n        async def get_select(self, request: Request) -> Select:\n            sel = await super().get_select(request)\n            return sel.outerjoin(models.User, models.User.id == models.Article.user_id)\n\n    site.register_router()\n\n    ins = site.get_admin_or_create(ArticleAdmin)\n    # test schemas\n    assert \"id\" in model_fields(ins.schema_list)\n    assert \"user_username\" in model_fields(ins.schema_list)\n    assert \"description\" in model_fields(ins.schema_list)\n    assert \"nickname\" in model_fields(ins.schema_list)\n    assert \"pwd\" in model_fields(ins.schema_list)\n    assert model_fields(ins.schema_list)[\"pwd\"].field_info.title == \"pwd_title\"\n\n    assert \"user_username\" in model_fields(ins.schema_filter)\n    assert \"nickname\" in model_fields(ins.schema_filter)\n    assert \"pwd\" in model_fields(ins.schema_filter)\n\n    # test openapi\n    site.fastapi.openapi_schema = None\n    openapi = site.fastapi.openapi()\n    schemas = openapi[\"components\"][\"schemas\"]\n    assert \"user__username\" in schemas[\"ArticleAdminList\"][\"properties\"]\n    assert \"description\" in schemas[\"ArticleAdminList\"][\"properties\"]\n    assert \"nickname\" in schemas[\"ArticleAdminList\"][\"properties\"]\n    assert \"pwd\" in schemas[\"ArticleAdminList\"][\"properties\"]"}
{"original_code": "def test_single(ep, method_request):\n    resp = method_request(\"probe\", {\"data\": \"one\"}, request_id=111)\n    assert resp == {\"id\": 111, \"jsonrpc\": \"2.0\", \"result\": \"one\"}\n    assert ep.calls == {\n        111: [\n            (\n                \"ep_middleware\",\n                \"enter\",\n                {\n                    \"id\": 111,\n                    \"jsonrpc\": \"2.0\",\n                    \"method\": \"probe\",\n                    \"params\": {\"data\": \"one\"},\n                },\n                None,\n                None,\n            ),\n            (\n                \"method_middleware\",\n                \"enter\",\n                {\n                    \"id\": 111,\n                    \"jsonrpc\": \"2.0\",\n                    \"method\": \"probe\",\n                    \"params\": {\"data\": \"one\"},\n                },\n                None,\n                None,\n            ),\n            (\n                \"method_middleware\",\n                \"exit\",\n                {\n                    \"id\": 111,\n                    \"jsonrpc\": \"2.0\",\n                    \"method\": \"probe\",\n                    \"params\": {\"data\": \"one\"},\n                },\n                {\"id\": 111, \"jsonrpc\": \"2.0\", \"result\": \"one\"},\n                None,\n            ),\n            (\n                \"ep_middleware\",\n                \"exit\",\n                {\n                    \"id\": 111,\n                    \"jsonrpc\": \"2.0\",\n                    \"method\": \"probe\",\n                    \"params\": {\"data\": \"one\"},\n                },\n                {\"id\": 111, \"jsonrpc\": \"2.0\", \"result\": \"one\"},\n                None,\n            ),\n        ]\n    }"}
- Retrieves a dictionary of Pydantic `ModelField` objects for a given SQLAlchemy `InspectTable` or subclass thereof. - Checks whether the input type is a direct subclass of `BaseModel`, in which case it returns the `ModelFields` of that class using the `model_fields()` function (presumably defined elsewhere). - Alternatively, checks whether the input type has an attribute called `__pydantic_model__` that is itself a subclass of `BaseModel`. If so, retrieves its `ModelFields` instead. - Returns an empty dictionary if no matching `BaseModel` can be found.
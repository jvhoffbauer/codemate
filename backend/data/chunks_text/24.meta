{"original_code": "    def __new__(cls, *args: Any, **kwargs: Any) -> Any:\n        new_object = super().__new__(cls)\n        # SQLAlchemy doesn't call __init__ on the base class\n        # Ref: https://docs.sqlalchemy.org/en/14/orm/constructors.html\n        # Set __fields_set__ here, that would have been set when calling __init__\n        # in the Pydantic model so that when SQLAlchemy sets attributes that are\n        # added (e.g. when querying from DB) to the __fields_set__, this already exists\n        set_fields_set(new_object, set())\n        return new_object"}
{"original_code": "async def test_create_fields(app: FastAPI, async_client: AsyncClient, models):\n    class UserCrud(SqlalchemyCrud):\n        router_prefix = \"/user\"\n        create_fields = [models.User.username]\n\n    ins = UserCrud(models.User, db.engine).register_crud()\n\n    app.include_router(ins.router)\n\n    assert \"username\" in model_fields(ins.schema_create)\n    assert \"password\" not in model_fields(ins.schema_create)\n\n    # test schemas\n    openapi = app.openapi()\n    schemas = openapi[\"components\"][\"schemas\"]\n    assert \"username\" in schemas[\"UserCrudCreate\"][\"properties\"]\n    assert \"password\" not in schemas[\"UserCrudCreate\"][\"properties\"]\n    # test api\n    body = {\"username\": \"User\", \"password\": \"password\", \"address\": [], \"attach\": {}}\n    res = await async_client.post(\"/user/item\", json=body)\n    data = res.json().get(\"data\")\n    assert data[\"id\"] > 0\n    assert data[\"username\"] == \"User\"\n    assert data[\"password\"] == \"\""}
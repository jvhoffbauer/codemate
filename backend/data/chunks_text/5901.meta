{"original_code": "def get_schema_fields_name_label(\n    schema: Type[BaseModel],\n    *,\n    prefix: str = \"\",\n    exclude_required: bool = False,\n    exclude: Iterable[str] = None,\n    include: Iterable[str] = None,\n) -> Dict[str, str]:\n    \"\"\"\u83b7\u53d6schema\u5b57\u6bb5\u540d\u548c\u6807\u7b7e.\u5982\u679cexclude\u4e2d\u5305\u542b__all__,\u5219\u8fd4\u56de\u7a7a\u5b57\u5178.\"\"\"\n    if not schema:\n        return {}\n    exclude = set(exclude or [])\n    if \"__all__\" in exclude:\n        return {}\n    include = set(include or [\"__all__\"])\n    fields = {}\n    for field in model_fields(schema).values():\n        if exclude_required and field.required:\n            continue\n        name = field.alias or field.name\n        if name in exclude or (name not in include and \"__all__\" not in include):\n            continue\n        label = field.field_info.title or field.name\n        fields[name] = prefix + label\n    return fields"}
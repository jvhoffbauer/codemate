{"original_code": "def make_request_model(name, module, body_params: List[ModelField]):\n    whole_params_list = [p for p in body_params if isinstance(p.field_info, Params)]\n    if len(whole_params_list):\n        if len(whole_params_list) > 1:\n            raise RuntimeError(\n                f\"Only one 'Params' allowed: \" f\"params={whole_params_list}\"\n            )\n        body_params_list = [\n            p for p in body_params if not isinstance(p.field_info, Params)\n        ]\n        if body_params_list:\n            raise RuntimeError(\n                f\"No other params allowed when 'Params' used: \"\n                f\"params={whole_params_list}, other={body_params_list}\"\n            )\n\n    if whole_params_list:\n        assert whole_params_list[0].alias == \"params\"\n        params_field = whole_params_list[0]\n        params_annotation, params_field_info = (\n            params_field.field_info.annotation,\n            params_field.field_info,\n        )\n    else:\n        fields = {\n            param.name: (param.field_info.annotation, param.field_info)\n            for param in body_params\n        }\n        _JsonRpcRequestParams = create_model(\n            f\"_Params[{name}]\",\n            __base__=(BaseModel,),\n            __module__=module,\n            **fields,\n        )\n        _JsonRpcRequestParams = component_name(f\"_Params[{name}]\", module)(\n            _JsonRpcRequestParams\n        )\n\n        params_annotation = _JsonRpcRequestParams\n        params_field_info = ...\n\n    _Request = create_model(\n        f\"_Request[{name}]\",\n        __config__=ConfigDict(extra=\"forbid\"),\n        __module__=module,\n        jsonrpc=(Literal[\"2.0\"], Field(\"2.0\", json_schema_extra={\"example\": \"2.0\"})),\n        id=(Union[StrictStr, int], Field(None, json_schema_extra={\"example\": 0})),\n        method=(\n            StrictStr,\n            Field(name, frozen=True, json_schema_extra={\"example\": name}),\n        ),\n        params=(params_annotation, params_field_info),\n    )\n    _Request = component_name(f\"_Request[{name}]\", module)(_Request)\n\n    return _Request"}
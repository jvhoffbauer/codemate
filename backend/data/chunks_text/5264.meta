{"original_code": "    def __call__(self, img: ImageData) -> ImageData:\n        \"\"\"Create hillshade from DEM dataset.\"\"\"\n        data = img.data[0]\n        mask = img.mask\n        bounds = img.bounds\n\n        x, y = numpy.gradient(data)\n\n        slope = numpy.pi / 2.0 - numpy.arctan(numpy.sqrt(x * x + y * y))\n        aspect = numpy.arctan2(-x, y)\n        azimuthrad = self.azimuth * numpy.pi / 180.0\n        altituderad = self.angle_altitude * numpy.pi / 180.0\n        shaded = numpy.sin(altituderad) * numpy.sin(slope) + numpy.cos(\n            altituderad\n        ) * numpy.cos(slope) * numpy.cos(azimuthrad - aspect)\n        hillshade_array = 255 * (shaded + 1) / 2\n\n        data = numpy.expand_dims(hillshade_array, axis=0).astype(dtype=numpy.uint8)\n\n        if self.buffer:\n            data = data[:, self.buffer : -self.buffer, self.buffer : -self.buffer]\n            mask = mask[self.buffer : -self.buffer, self.buffer : -self.buffer]\n            # image bounds without buffer\n            window = windows.Window(\n                col_off=self.buffer,\n                row_off=self.buffer,\n                width=mask.shape[1],\n                height=mask.shape[0],\n            )\n            bounds = windows.bounds(window, img.transform)\n\n        return ImageData(\n            data,\n            mask,\n            assets=img.assets,\n            crs=img.crs,\n            bounds=bounds,\n        )"}
{"original_code": "def apiroute_factory(env: Optional[Dict] = None) -> Type[APIRoute]:\n    \"\"\"\n    Create Custom API Route class with custom Env.\n\n    Because we cannot create middleware for specific router we need to create\n    a custom APIRoute which add the `rasterio.Env(` block before the endpoint is\n    actually called. This way we set the env outside the threads and we make sure\n    that event multithreaded Reader will get the environment set.\n\n    Note: This has been tested in python 3.6 and 3.7 only.\n\n    \"\"\"\n    warnings.warn(\n        \"'apiroute_factory' has been deprecated and will be removed\"\n        \"in titiler 0.1.0. Please see `environment_dependency` option in endpoint factories.\",\n        DeprecationWarning,\n    )\n\n    class EnvAPIRoute(APIRoute):\n        \"\"\"Custom API route with env.\"\"\"\n\n        config = env or {}\n\n        def get_route_handler(self) -> Callable:\n            original_route_handler = super().get_route_handler()\n\n            async def custom_route_handler(request: Request) -> Response:\n                with rasterio.Env(**self.config):\n                    response: Response = await original_route_handler(request)\n                return response\n\n            return custom_route_handler\n\n    return EnvAPIRoute"}
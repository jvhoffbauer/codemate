{"original_code": "def test_TilerFactory_WithGdalEnv():\n    \"\"\"test environment_dependency option.\"\"\"\n\n    router = TilerFactory(\n        environment_dependency=lambda: {\"GDAL_DISABLE_READDIR_ON_OPEN\": \"EMPTY_DIR\"}\n    ).router\n    app = FastAPI()\n    app.include_router(router)\n    client = TestClient(app)\n\n    response = client.get(f\"/info?url={DATA_DIR}/non_cog.tif\")\n    assert not response.json()[\"overviews\"]\n\n    router = TilerFactory(\n        environment_dependency=lambda: {\"GDAL_DISABLE_READDIR_ON_OPEN\": \"FALSE\"}\n    ).router\n    app = FastAPI()\n    app.include_router(router)\n    client = TestClient(app)\n\n    response = client.get(f\"/info?url={DATA_DIR}/non_cog.tif\")\n    assert response.json()[\"overviews\"]\n\n    class ReaddirType(str, Enum):\n        false = \"false\"\n        true = \"true\"\n        empty_dir = \"empty_dir\"\n\n    def gdal_env(disable_read: ReaddirType = Query(ReaddirType.false)):\n        return {\"GDAL_DISABLE_READDIR_ON_OPEN\": disable_read.value.upper()}\n\n    router = TilerFactory(environment_dependency=gdal_env).router\n    app = FastAPI()\n    app.include_router(router)\n    client = TestClient(app)\n\n    response = client.get(f\"/info?url={DATA_DIR}/non_cog.tif\")\n    assert response.json()[\"overviews\"]\n\n    response = client.get(f\"/info?url={DATA_DIR}/non_cog.tif&disable_read=false\")\n    assert response.json()[\"overviews\"]\n\n    response = client.get(f\"/info?url={DATA_DIR}/non_cog.tif&disable_read=empty_dir\")\n    assert not response.json()[\"overviews\"]"}
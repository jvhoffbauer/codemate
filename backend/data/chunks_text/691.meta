{"original_code": "async def test_endpoint_to_worker_to_worker(\n    client, caplog, celery_session_app, celery_session_worker\n):\n    \"\"\"\n    We expect:\n        - The correlation ID to persist from the endpoint to the final worker\n        - The current ID of the first worker to be added as the parent ID of the second worker\n    \"\"\"\n\n    @default_app.get(\"/celery-test\", status_code=200)\n    async def test_view():\n        logger.debug(\"Test view\")\n        task1.delay().get(timeout=10)\n\n    caplog.set_level(\"DEBUG\")\n\n    cid = uuid4().hex\n    await client.get(\"celery-test\", headers={\"X-Request-ID\": cid})\n\n    # Check the view record\n    assert caplog.records[0].correlation_id == cid\n    assert caplog.records[0].celery_current_id is None\n    assert caplog.records[0].celery_parent_id is None\n\n    last_current_id = None\n\n    for record in caplog.records[1:3]:\n        # Check that the correlation ID is persisted\n        assert record.correlation_id == cid\n\n        # Make sure the celery current ID is a valid UUID and present\n        assert UUID(record.celery_current_id)\n\n        # Make sure the parent ID matches the previous current ID\n        assert record.celery_parent_id == last_current_id\n\n        last_current_id = record.celery_current_id"}
{"original_code": "def test_no_multiple_annotations():\n    async def dep():\n        pass  # pragma: nocover\n\n    with pytest.raises(\n        AssertionError,\n        match=\"Cannot specify multiple `Annotated` FastAPI arguments for 'foo'\",\n    ):\n\n        @app.get(\"/\")\n        async def get(foo: Annotated[int, Query(min_length=1), Query()]):\n            pass  # pragma: nocover\n\n    with pytest.raises(\n        AssertionError,\n        match=(\n            \"Cannot specify `Depends` in `Annotated` and default value\"\n            \" together for 'foo'\"\n        ),\n    ):\n\n        @app.get(\"/\")\n        async def get2(foo: Annotated[int, Depends(dep)] = Depends(dep)):\n            pass  # pragma: nocover\n\n    with pytest.raises(\n        AssertionError,\n        match=(\n            \"Cannot specify a FastAPI annotation in `Annotated` and `Depends` as a\"\n            \" default value together for 'foo'\"\n        ),\n    ):\n\n        @app.get(\"/\")\n        async def get3(foo: Annotated[int, Query(min_length=1)] = Depends(dep)):\n            pass  # pragma: nocover"}
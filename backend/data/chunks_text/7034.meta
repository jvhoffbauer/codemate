{"original_code": "@router.post(\"/access-token\", response_model=schemas.Token)\ndef login_access_token(\n    db: Session = Depends(deps.get_db), form_data: OAuth2PasswordRequestForm = Depends()\n):\n    \"\"\"OAuth2 compatible token login, get an access token for future requests.\"\"\"\n    user = crud.user.authenticate(\n        db, email=form_data.username, password=form_data.password\n    )\n    if not user:\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,\n            detail=\"Incorrect email or password.\",\n        )\n    elif not crud.user.is_active(user):\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST, detail=\"Inactive user.\"\n        )\n    return {\n        \"access_token\": security.create_access_token(str(user.id)),\n        \"token_type\": \"bearer\",\n    }"}
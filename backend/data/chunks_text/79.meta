{"original_code": "    async def exec(\n        self,\n        statement: Union[\n            Select[_TSelectParam],\n            SelectOfScalar[_TSelectParam],\n            Executable[_TSelectParam],\n        ],\n        *,\n        params: Optional[Union[Mapping[str, Any], Sequence[Mapping[str, Any]]]] = None,\n        execution_options: Mapping[str, Any] = util.EMPTY_DICT,\n        bind_arguments: Optional[Dict[str, Any]] = None,\n        _parent_execute_state: Optional[Any] = None,\n        _add_event: Optional[Any] = None,\n    ) -> Union[TupleResult[_TSelectParam], ScalarResult[_TSelectParam]]:\n        if execution_options:\n            execution_options = util.immutabledict(execution_options).union(\n                _EXECUTE_OPTIONS\n            )\n        else:\n            execution_options = _EXECUTE_OPTIONS\n\n        result = await greenlet_spawn(\n            self.sync_session.exec,\n            statement,\n            params=params,\n            execution_options=execution_options,\n            bind_arguments=bind_arguments,\n            _parent_execute_state=_parent_execute_state,\n            _add_event=_add_event,\n        )\n        result_value = await _ensure_sync_result(\n            cast(Result[_TSelectParam], result), self.exec\n        )\n        return result_value  # type: ignore"}
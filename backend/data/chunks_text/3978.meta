{"original_code": "def test_get_enums_invalid():\n    response = client.get(\"/models/foo\")\n    assert response.status_code == 422\n    assert response.json() == IsDict(\n        {\n            \"detail\": [\n                {\n                    \"type\": \"enum\",\n                    \"loc\": [\"path\", \"model_name\"],\n                    \"msg\": \"Input should be 'alexnet', 'resnet' or 'lenet'\",\n                    \"input\": \"foo\",\n                    \"ctx\": {\"expected\": \"'alexnet', 'resnet' or 'lenet'\"},\n                }\n            ]\n        }\n    ) | IsDict(\n        # TODO: remove when deprecating Pydantic v1\n        {\n            \"detail\": [\n                {\n                    \"ctx\": {\"enum_values\": [\"alexnet\", \"resnet\", \"lenet\"]},\n                    \"loc\": [\"path\", \"model_name\"],\n                    \"msg\": \"value is not a valid enumeration member; permitted: 'alexnet', 'resnet', 'lenet'\",\n                    \"type\": \"type_error.enum\",\n                }\n            ]\n        }\n    )"}
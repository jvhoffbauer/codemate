- Initializes `correlation_id`, which will hold the unique identifier for each request. - Checks whether the current request type (HTTP or WebSocket) should be handled by this middleware. If not, passes control to the next middleware. - Tries to extract the request ID from the request headers using a mutable copy of the headers dictionary. - Generates a new request ID if no valid one could be found or an existing one failed validation. - Applies any transformations to the generated or extracted request ID as necessary. - Updates the request headers with the finalized request ID if requested. - Sets the global `correlation_id` variable to the newly calculated value. - Calls a custom function called `sentry_extension` with the request ID as argument. This can be used to integrate other tools that require a request ID. - Wraps the original application call with a callback function that adds the request ID to outgoing HTTP responses' headers if required.
{"original_code": "    async def handle_body(\n        self,\n        http_request: Request,\n        background_tasks: BackgroundTasks,\n        sub_response: Response,\n        body: Any,\n    ) -> dict:\n        # Shared dependencies for all requests in one json-rpc batch request\n        shared_dependencies_error = None\n        try:\n            dependency_cache = await self.entrypoint.solve_shared_dependencies(\n                http_request,\n                background_tasks,\n                sub_response,\n            )\n        except BaseError as error:\n            shared_dependencies_error = error\n            dependency_cache = None\n\n        resp = await self.handle_req_to_resp(\n            http_request,\n            background_tasks,\n            sub_response,\n            body,\n            dependency_cache=dependency_cache,\n            shared_dependencies_error=shared_dependencies_error,\n        )\n\n        # No response for successful notifications\n        has_content = \"error\" in resp or \"id\" in resp\n        if not has_content:\n            raise NoContent\n\n        return resp"}
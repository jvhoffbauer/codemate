{"original_code": "def create_index(\n    index_definition: Dict[str, Any],\n    *,\n    reset_uuids=True,\n    username: str = COUCHBASE_USER,\n    password: str = COUCHBASE_PASSWORD,\n    host=\"couchbase\",\n    port=\"8094\",\n):\n    index_name = index_definition.get(\"name\")\n    assert index_name, \"An index name is required as key in an index definition\"\n    if reset_uuids:\n        index_definition.update({\"uuid\": \"\", \"sourceUUID\": \"\"})\n    full_text_url = f\"http://{host}:{port}\"\n    index_url = f\"{full_text_url}/api/index/{index_name}\"\n    auth = HTTPBasicAuth(username, password)\n    response = requests.put(index_url, auth=auth, json=index_definition)\n    content = response.json()\n    if response.status_code == 400:\n        error = content.get(\"error\")\n        if (\n            \"cannot create index because an index with the same name already exists:\"\n            in error\n        ):\n            raise ValueError(error)\n        else:\n            raise ValueError(error)\n    elif response.status_code == 200:\n        assert (\n            content.get(\"status\") == \"ok\"\n        ), \"Expected a status OK communicating with Full Text Search\"\n        return True\n    raise ValueError(response.text)"}
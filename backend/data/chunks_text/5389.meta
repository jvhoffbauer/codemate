{"original_code": "def test_register_deps():\n    \"\"\"Test add_route_dependencies.\"\"\"\n\n    http_basic = security.HTTPBasic()\n\n    def must_be_bob(credentials: security.HTTPBasicCredentials = Depends(http_basic)):\n        if credentials.username == \"bob\":\n            return True\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"You're not Bob\",\n            headers={\"WWW-Authenticate\": \"Basic\"},\n        )\n\n    app = FastAPI()\n\n    @app.get(\"/one\")\n    def one():\n        \"\"\"one.\"\"\"\n        return \"one\"\n\n    @app.get(\"/two\")\n    def two():\n        \"\"\"two.\"\"\"\n        return \"two\"\n\n    auth_bob = httpx.BasicAuth(username=\"bob\", password=\"ILoveSponge\")\n    auth_notbob = httpx.BasicAuth(username=\"notbob\", password=\"IHateSponge\")\n\n    add_route_dependencies(\n        app.routes,\n        scopes=[\n            {\"path\": \"/one\", \"method\": \"GET\"},\n        ],\n        dependencies=[Depends(must_be_bob)],\n    )\n\n    client = TestClient(app)\n\n    response = client.get(\"/one\", auth=auth_bob)\n    assert response.status_code == 200\n\n    response = client.get(\"/one\", auth=auth_notbob)\n    assert response.status_code == 401\n\n    response = client.get(\"/two\", auth=auth_bob)\n    assert response.status_code == 200\n\n    response = client.get(\"/two\", auth=auth_notbob)\n    assert response.status_code == 200"}
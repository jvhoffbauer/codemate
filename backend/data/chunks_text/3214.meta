{"original_code": "def get_client():\n    from pydantic import BaseModel, ValidationInfo, field_validator\n\n    app = FastAPI()\n\n    class ModelB(BaseModel):\n        username: str\n\n    class ModelC(ModelB):\n        password: str\n\n    class ModelA(BaseModel):\n        name: str\n        description: Optional[str] = None\n        foo: ModelB\n\n        @field_validator(\"name\")\n        def lower_username(cls, name: str, info: ValidationInfo):\n            if not name.endswith(\"A\"):\n                raise ValueError(\"name must end in A\")\n            return name\n\n    async def get_model_c() -> ModelC:\n        return ModelC(username=\"test-user\", password=\"test-password\")\n\n    @app.get(\"/model/{name}\", response_model=ModelA)\n    async def get_model_a(name: str, model_c=Depends(get_model_c)):\n        return {\"name\": name, \"description\": \"model-a-desc\", \"foo\": model_c}\n\n    client = TestClient(app)\n    return client"}
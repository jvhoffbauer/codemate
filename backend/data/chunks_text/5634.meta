{"original_code": "    def register_crud(\n        self,\n        schema_list: Type[SchemaListT] = None,\n        schema_filter: Type[SchemaFilterT] = None,\n        schema_create: Type[SchemaCreateT] = None,\n        schema_read: Type[\n            SchemaReadT\n        ] = None,  # default is None, means not use read route.\n        schema_update: Type[SchemaUpdateT] = None,\n        list_per_page_max: int = None,\n        depends_list: List[Depends] = None,\n        depends_read: List[Depends] = None,\n        depends_create: List[Depends] = None,\n        depends_update: List[Depends] = None,\n        depends_delete: List[Depends] = None,\n    ) -> \"BaseCrud\":\n        self.schema_list = schema_list or self.schema_list or self._create_schema_list()\n        self.schema_filter = (\n            schema_filter or self.schema_filter or self._create_schema_filter()\n        )\n        self.schema_create = (\n            schema_create or self.schema_create or self._create_schema_create()\n        )\n        self.schema_read = schema_read or self.schema_read or self._create_schema_read()\n        self.schema_update = (\n            schema_update or self.schema_update or self._create_schema_update()\n        )\n        self.list_per_page_max = list_per_page_max or self.list_per_page_max\n        self.paginator = Paginator(perPageMax=self.list_per_page_max)\n        self.router.add_api_route(\n            \"/list\",\n            self.route_list,\n            methods=[\"POST\"],\n            response_model=BaseApiOut[ItemListSchema[self.schema_list]],\n            dependencies=depends_list,\n            name=CrudEnum.list,\n        )\n        if self.schema_read:\n            self.router.add_api_route(\n                \"/item/{item_id}\",\n                self.route_read,\n                methods=[\"GET\"],\n                response_model=BaseApiOut[\n                    Union[self.schema_read, List[self.schema_read]]\n                ],\n                dependencies=depends_read,\n                name=CrudEnum.read,\n            )\n        self.router.add_api_route(\n            \"/item\",\n            self.route_create,\n            methods=[\"POST\"],\n            response_model=BaseApiOut[Union[int, self.schema_model]],\n            dependencies=depends_create,\n            name=CrudEnum.create,\n        )\n        self.router.add_api_route(\n            \"/item/{item_id}\",\n            self.route_update,\n            methods=[\"PUT\"],\n            response_model=BaseApiOut[int],\n            dependencies=depends_update,\n            name=CrudEnum.update,\n        )\n        self.router.add_api_route(\n            \"/item/{item_id}\",\n            self.route_delete,\n            methods=[\"DELETE\"],\n            response_model=BaseApiOut[int],\n            dependencies=depends_delete,\n            name=CrudEnum.delete,\n        )\n        return self"}
{"original_code": "async def test_worker_to_worker_to_worker(\n    caplog, celery_session_app, celery_session_worker\n):\n    \"\"\"\n    We expect:\n        - A correlation ID to be generated in the first worker and persisted to the final worker\n        - The current ID of the first worker to be added as the\n            parent ID of the second worker, and the same for 2 and 3\n    \"\"\"\n    caplog.set_level(\"DEBUG\")\n\n    # Trigger task\n    task1.delay().get(timeout=10)\n\n    # Save first correlation ID\n    first_log = caplog.records[0]\n    first_cid = first_log.correlation_id\n\n    last_current_id = None\n\n    for record in caplog.records:\n        # Check that the correlation ID is persisted\n        assert record.correlation_id == first_cid\n\n        # Make sure the celery current ID is a valid UUID and present\n        assert UUID(record.celery_current_id)\n\n        # Make sure the parent ID matches the previous current ID\n        assert record.celery_parent_id == last_current_id\n\n        last_current_id = record.celery_current_id"}
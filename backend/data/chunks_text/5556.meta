{"original_code": "def insfield_to_modelfield(insfield: InstrumentedAttribute) -> Optional[ModelField]:\n    \"\"\"InstrumentedAttribute to ModelField\"\"\"\n    if not isinstance(insfield.property, ColumnProperty):\n        return None\n    expression = insfield.expression\n    field_info_kwargs = {}\n    required = not expression.nullable\n    default = ...\n    if expression.nullable:\n        default = None\n    if expression.default:\n        if expression.default.is_scalar:\n            default = expression.default.arg\n            required = False\n        elif expression.default.is_callable:\n            field_info_kwargs[\"default_factory\"] = expression.default.arg\n            required = False\n    if isinstance(expression.type, String):\n        field_info_kwargs[\"max_length\"] = expression.type.length\n    if \"default_factory\" not in field_info_kwargs:\n        field_info_kwargs[\"default\"] = default\n    type_ = expression.type.python_type\n    if PYDANTIC_V2:\n        field_info_kwargs[\"annotation\"] = type_\n    return create_response_field(\n        name=insfield.key,\n        type_=type_,\n        required=required,\n        field_info=Field(title=expression.comment, **field_info_kwargs),\n    )"}
- Initializes an instance of `SQLModel` using `validate_model` from Pydantic to check input data against the schema defined by the class. If it's not a `SQLModel` subclass (i.e., a plain Pydantic model), raises any validation error that occurred during initialization. Otherwise, sets the attributes on the instance directly instead of overwriting the dictionary representation like Pydantic would do. This allows SQLAlchemy to handle the attributes correctly.
- Sets the `__fields_set__` attribute based on which fields were actually provided in the input data. This is used later when checking whether an update should be considered a partial or full update.
- Finds any keys in the input data that weren't included in the validated values and checks whether they correspond to relationship properties defined by the `__sqlmodel_relationships__` attribute. If so, sets those relationships accordingly.
- This function handles a POST request to `/login/access-token`, which is used to obtain an access token for making further API calls. - The `OAuth2PasswordRequestForm` dependency is injected into the function and deserialized from the incoming JSON body using Pydantic's ORM feature. - The default database connection (`get_default_bucket()`) is retrieved and passed to the `crud.user.authenticate()` method along with the form data to authenticate the user. - If authentication fails, a `HTTPException` is raised with status code 400 and error message "Incorrect email or password". - If the user is inactive, another `HTTPException` is raised with status code 400 and error message "Inactive user". - An access token is created using `create_access_token()` with an expiration time of `config.ACCESS_TOKEN_EXPIRE_MINUTES`. - The resulting dictionary containing the access token and token type ("bearer") is returned as the response body.
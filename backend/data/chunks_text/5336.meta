{"original_code": "def test_bands():\n    \"\"\"test bands deps.\"\"\"\n\n    app = FastAPI()\n\n    @app.get(\"/first\")\n    def _bands(params=Depends(dependencies.BandsParams)):\n        \"\"\"return bands.\"\"\"\n        return params.bands\n\n    @app.get(\"/second\")\n    def _bands_expr(params=Depends(dependencies.BandsExprParams)):\n        \"\"\"return params.\"\"\"\n        return params\n\n    @app.get(\"/third\")\n    def _bands_expr_opt(params=Depends(dependencies.BandsExprParamsOptional)):\n        \"\"\"return params.\"\"\"\n        return params\n\n    client = TestClient(app)\n    response = client.get(\"/first?bands=b1&bands=b2\")\n    assert response.json() == [\"b1\", \"b2\"]\n\n    response = client.get(\"/first\")\n    assert not response.json()\n\n    response = client.get(\"/second?bands=b1&bands=b2\")\n    assert response.json()[\"bands\"] == [\"b1\", \"b2\"]\n\n    response = client.get(\"/second\", params={\"expression\": \"b1;b2\"})\n    assert response.json()[\"expression\"] == \"b1;b2\"\n\n    with pytest.raises(errors.MissingBands):\n        response = client.get(\"/second\")\n\n    response = client.get(\"/third?bands=b1&bands=b2\")\n    assert response.json()[\"bands\"] == [\"b1\", \"b2\"]\n\n    response = client.get(\"/third\", params={\"expression\": \"b1;b2\"})\n    assert response.json()[\"expression\"] == \"b1;b2\"\n\n    response = client.get(\"/third\")\n    assert not response.json()[\"bands\"]"}
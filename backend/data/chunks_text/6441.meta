{"original_code": "    @asynccontextmanager\n    async def _handle_exception(self, reraise=True):\n        try:\n            yield\n        except Exception as exception:\n            if exception is not self.exception:\n                try:\n                    resp = await self.entrypoint.handle_exception(exception)\n                except Exception as exc:\n                    self.on_raw_response(exc)\n                else:\n                    self.on_raw_response(resp)\n            if self.exception is not None and (\n                reraise or isinstance(self.exception, HTTPException)\n            ):\n                raise self.exception\n\n        if self.exception is not None and self.is_unhandled_exception:\n            logger.exception(str(self.exception), exc_info=self.exception)"}
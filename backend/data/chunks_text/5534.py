- Retrieves a dictionary of Pydantic `ModelField` objects for a given SQLAlchemy `InspectTable` or subclass thereof. - Checks whether the input type is a direct subclass of `BaseModel`, in which case it returns the `ModelFields` object associated with that class. - Alternatively, checks whether an instance variable named `__pydantic_model__` exists on the input type, indicating that it's being used as a Pydantic model wrapped by SQLAlchemy. If so, retrieves the corresponding `ModelFields` object from that inner class instead. - Returns an empty dictionary if no valid input type can be found.
{"original_code": "def test_post_broken_body(client: TestClient):\n    response = client.post(\n        \"/items/\",\n        headers={\"content-type\": \"application/json\"},\n        content=\"{some broken json}\",\n    )\n    assert response.status_code == 422, response.text\n    assert response.json() == IsDict(\n        {\n            \"detail\": [\n                {\n                    \"type\": \"json_invalid\",\n                    \"loc\": [\"body\", 1],\n                    \"msg\": \"JSON decode error\",\n                    \"input\": {},\n                    \"ctx\": {\n                        \"error\": \"Expecting property name enclosed in double quotes\"\n                    },\n                }\n            ]\n        }\n    ) | IsDict(\n        # TODO: remove when deprecating Pydantic v1\n        {\n            \"detail\": [\n                {\n                    \"loc\": [\"body\", 1],\n                    \"msg\": \"Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\",\n                    \"type\": \"value_error.jsondecode\",\n                    \"ctx\": {\n                        \"msg\": \"Expecting property name enclosed in double quotes\",\n                        \"doc\": \"{some broken json}\",\n                        \"pos\": 1,\n                        \"lineno\": 1,\n                        \"colno\": 2,\n                    },\n                }\n            ]\n        }\n    )"}